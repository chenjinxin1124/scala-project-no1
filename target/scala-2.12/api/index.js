Index.PACKAGES = {"cn.chenhuanming.hello.akka.http" : [{"name" : "cn.chenhuanming.hello.akka.http.Server", "shortDescription" : "", "object" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html", "members_object" : [{"label" : "RootJsArrayFormat", "tail" : "", "member" : "spray.json.AdditionalFormats.RootJsArrayFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#RootJsArrayFormat", "kind" : "implicit object"}, {"label" : "RootJsObjectFormat", "tail" : "", "member" : "spray.json.AdditionalFormats.RootJsObjectFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#RootJsObjectFormat", "kind" : "implicit object"}, {"label" : "JsValueFormat", "tail" : "", "member" : "spray.json.AdditionalFormats.JsValueFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#JsValueFormat", "kind" : "implicit object"}, {"label" : "OptionFormat", "tail" : "", "member" : "spray.json.StandardFormats.OptionFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#OptionFormat[T<:<?>]extendsStandardFormats.this.JF[Option[T]]", "kind" : "class"}, {"label" : "SymbolJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.SymbolJsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#SymbolJsonFormat", "kind" : "implicit object"}, {"label" : "StringJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.StringJsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#StringJsonFormat", "kind" : "implicit object"}, {"label" : "CharJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.CharJsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#CharJsonFormat", "kind" : "implicit object"}, {"label" : "BooleanJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.BooleanJsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#BooleanJsonFormat", "kind" : "implicit object"}, {"label" : "UnitJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.UnitJsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#UnitJsonFormat", "kind" : "implicit object"}, {"label" : "BigIntJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.BigIntJsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#BigIntJsonFormat", "kind" : "implicit object"}, {"label" : "BigDecimalJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.BigDecimalJsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#BigDecimalJsonFormat", "kind" : "implicit object"}, {"label" : "ShortJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.ShortJsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#ShortJsonFormat", "kind" : "implicit object"}, {"label" : "ByteJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.ByteJsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#ByteJsonFormat", "kind" : "implicit object"}, {"label" : "DoubleJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.DoubleJsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#DoubleJsonFormat", "kind" : "implicit object"}, {"label" : "FloatJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.FloatJsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#FloatJsonFormat", "kind" : "implicit object"}, {"label" : "LongJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.LongJsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#LongJsonFormat", "kind" : "implicit object"}, {"label" : "IntJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.IntJsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#IntJsonFormat", "kind" : "implicit object"}, {"label" : "NumberMatcher", "tail" : "", "member" : "akka.http.scaladsl.server.PathMatchers.NumberMatcher", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#NumberMatcher[T<:<?>]extendsPathMatcher1[T]", "kind" : "abstract class"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "cn.chenhuanming.hello.akka.http.Server.main", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "postServerShutdown", "tail" : "(attempt: Try[Done], system: ActorSystem): Unit", "member" : "cn.chenhuanming.hello.akka.http.Server.postServerShutdown", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#postServerShutdown(attempt:scala.util.Try[akka.Done],system:akka.actor.ActorSystem):Unit", "kind" : "def"}, {"label" : "waitForShutdownSignal", "tail" : "(system: ActorSystem)(ec: ExecutionContext): Future[Done]", "member" : "cn.chenhuanming.hello.akka.http.Server.waitForShutdownSignal", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#waitForShutdownSignal(system:akka.actor.ActorSystem)(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[akka.Done]", "kind" : "def"}, {"label" : "routes", "tail" : "(): Route", "member" : "cn.chenhuanming.hello.akka.http.Server.routes", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#routes:akka.http.scaladsl.server.Route", "kind" : "def"}, {"label" : "timeout", "tail" : ": Timeout", "member" : "cn.chenhuanming.hello.akka.http.Server.timeout", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#timeout:akka.util.Timeout", "kind" : "implicit val"}, {"label" : "helloActor", "tail" : ": ActorRef", "member" : "cn.chenhuanming.hello.akka.http.Server.helloActor", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#helloActor:akka.actor.ActorRef", "kind" : "implicit val"}, {"label" : "actorSystem", "tail" : ": ActorSystem", "member" : "cn.chenhuanming.hello.akka.http.Server.actorSystem", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#actorSystem:akka.actor.ActorSystem", "kind" : "implicit val"}, {"label" : "helloDTOFormat", "tail" : ": RootJsonFormat[HelloDTO]", "member" : "cn.chenhuanming.hello.akka.http.domain.JsonSupport.helloDTOFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#helloDTOFormat:spray.json.RootJsonFormat[cn.chenhuanming.hello.akka.http.domain.HelloDTO]", "kind" : "implicit val"}, {"label" : "safeReader", "tail" : "(arg0: JsonReader[A]): JsonReader[Either[Exception, A]]", "member" : "spray.json.AdditionalFormats.safeReader", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#safeReader[A](implicitevidence$1:spray.json.JsonReader[A]):spray.json.JsonReader[Either[Exception,A]]", "kind" : "def"}, {"label" : "lazyFormat", "tail" : "(format: â‡’ JsonFormat[T]): JsonFormat[T] { lazy val delegate: spray.json.JsonFormat[T] }", "member" : "spray.json.AdditionalFormats.lazyFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#lazyFormat[T](format:=>spray.json.JsonFormat[T]):spray.json.JsonFormat[T]{lazyvaldelegate:spray.json.JsonFormat[T]}", "kind" : "def"}, {"label" : "lift", "tail" : "(reader: RootJsonReader[T]): RootJsonFormat[T]", "member" : "spray.json.AdditionalFormats.lift", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#lift[T<:AnyRef](reader:spray.json.RootJsonReader[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "lift", "tail" : "(reader: JsonReader[T]): JsonFormat[T]", "member" : "spray.json.AdditionalFormats.lift", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#lift[T<:AnyRef](reader:spray.json.JsonReader[T]):spray.json.JsonFormat[T]", "kind" : "def"}, {"label" : "lift", "tail" : "(writer: RootJsonWriter[T]): RootJsonFormat[T]", "member" : "spray.json.AdditionalFormats.lift", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#lift[T](writer:spray.json.RootJsonWriter[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "lift", "tail" : "(writer: JsonWriter[T]): JsonFormat[T] { def read(value: spray.json.JsValue): Nothing }", "member" : "spray.json.AdditionalFormats.lift", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#lift[T](writer:spray.json.JsonWriter[T]):spray.json.JsonFormat[T]{defread(value:spray.json.JsValue):Nothing}", "kind" : "def"}, {"label" : "rootFormat", "tail" : "(format: JsonFormat[T]): RootJsonFormat[T]", "member" : "spray.json.AdditionalFormats.rootFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#rootFormat[T](format:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "rootJsonFormat", "tail" : "(reader: RootJsonReader[T], writer: RootJsonWriter[T]): RootJsonFormat[T]", "member" : "spray.json.AdditionalFormats.rootJsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#rootJsonFormat[T](reader:spray.json.RootJsonReader[T],writer:spray.json.RootJsonWriter[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(reader: JsonReader[T], writer: JsonWriter[T]): JsonFormat[T]", "member" : "spray.json.AdditionalFormats.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat[T](reader:spray.json.JsonReader[T],writer:spray.json.JsonWriter[T]):spray.json.JsonFormat[T]", "kind" : "def"}, {"label" : "extractFieldNames", "tail" : "(classManifest: ClassManifest[_]): Array[String]", "member" : "spray.json.ProductFormats.extractFieldNames", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#extractFieldNames(classManifest:ClassManifest[_]):Array[String]", "kind" : "def"}, {"label" : "fromField", "tail" : "(value: JsValue, fieldName: String)(reader: JsonReader[T]): T", "member" : "spray.json.ProductFormats.fromField", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#fromField[T](value:spray.json.JsValue,fieldName:String)(implicitreader:spray.json.JsonReader[T]):T", "kind" : "def"}, {"label" : "productElement2Field", "tail" : "(fieldName: String, p: Product, ix: Int, rest: List[JsField])(writer: JsonWriter[T]): List[JsField]", "member" : "spray.json.ProductFormats.productElement2Field", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#productElement2Field[T](fieldName:String,p:Product,ix:Int,rest:List[spray.json.JsField])(implicitwriter:spray.json.JsonWriter[T]):List[spray.json.JsField]", "kind" : "def"}, {"label" : "jsonFormat0", "tail" : "(construct: () â‡’ T): RootJsonFormat[T]", "member" : "spray.json.ProductFormats.jsonFormat0", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat0[T](construct:()=>T):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20, P21, P22) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String, fieldName18: String, fieldName19: String, fieldName20: String, fieldName21: String, fieldName22: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20], arg20: JF[P21], arg21: JF[P22]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,P22,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,P22)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String,fieldName18:String,fieldName19:String,fieldName20:String,fieldName21:String,fieldName22:String)(implicitevidence$507:ProductFormatsInstances.this.JF[P1],implicitevidence$508:ProductFormatsInstances.this.JF[P2],implicitevidence$509:ProductFormatsInstances.this.JF[P3],implicitevidence$510:ProductFormatsInstances.this.JF[P4],implicitevidence$511:ProductFormatsInstances.this.JF[P5],implicitevidence$512:ProductFormatsInstances.this.JF[P6],implicitevidence$513:ProductFormatsInstances.this.JF[P7],implicitevidence$514:ProductFormatsInstances.this.JF[P8],implicitevidence$515:ProductFormatsInstances.this.JF[P9],implicitevidence$516:ProductFormatsInstances.this.JF[P10],implicitevidence$517:ProductFormatsInstances.this.JF[P11],implicitevidence$518:ProductFormatsInstances.this.JF[P12],implicitevidence$519:ProductFormatsInstances.this.JF[P13],implicitevidence$520:ProductFormatsInstances.this.JF[P14],implicitevidence$521:ProductFormatsInstances.this.JF[P15],implicitevidence$522:ProductFormatsInstances.this.JF[P16],implicitevidence$523:ProductFormatsInstances.this.JF[P17],implicitevidence$524:ProductFormatsInstances.this.JF[P18],implicitevidence$525:ProductFormatsInstances.this.JF[P19],implicitevidence$526:ProductFormatsInstances.this.JF[P20],implicitevidence$527:ProductFormatsInstances.this.JF[P21],implicitevidence$528:ProductFormatsInstances.this.JF[P22]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat22", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20, P21, P22) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20], arg20: JF[P21], arg21: JF[P22], arg22: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat22", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat22[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,P22,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,P22)=>T)(implicitevidence$484:ProductFormatsInstances.this.JF[P1],implicitevidence$485:ProductFormatsInstances.this.JF[P2],implicitevidence$486:ProductFormatsInstances.this.JF[P3],implicitevidence$487:ProductFormatsInstances.this.JF[P4],implicitevidence$488:ProductFormatsInstances.this.JF[P5],implicitevidence$489:ProductFormatsInstances.this.JF[P6],implicitevidence$490:ProductFormatsInstances.this.JF[P7],implicitevidence$491:ProductFormatsInstances.this.JF[P8],implicitevidence$492:ProductFormatsInstances.this.JF[P9],implicitevidence$493:ProductFormatsInstances.this.JF[P10],implicitevidence$494:ProductFormatsInstances.this.JF[P11],implicitevidence$495:ProductFormatsInstances.this.JF[P12],implicitevidence$496:ProductFormatsInstances.this.JF[P13],implicitevidence$497:ProductFormatsInstances.this.JF[P14],implicitevidence$498:ProductFormatsInstances.this.JF[P15],implicitevidence$499:ProductFormatsInstances.this.JF[P16],implicitevidence$500:ProductFormatsInstances.this.JF[P17],implicitevidence$501:ProductFormatsInstances.this.JF[P18],implicitevidence$502:ProductFormatsInstances.this.JF[P19],implicitevidence$503:ProductFormatsInstances.this.JF[P20],implicitevidence$504:ProductFormatsInstances.this.JF[P21],implicitevidence$505:ProductFormatsInstances.this.JF[P22],implicitevidence$506:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20, P21) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String, fieldName18: String, fieldName19: String, fieldName20: String, fieldName21: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20], arg20: JF[P21]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String,fieldName18:String,fieldName19:String,fieldName20:String,fieldName21:String)(implicitevidence$463:ProductFormatsInstances.this.JF[P1],implicitevidence$464:ProductFormatsInstances.this.JF[P2],implicitevidence$465:ProductFormatsInstances.this.JF[P3],implicitevidence$466:ProductFormatsInstances.this.JF[P4],implicitevidence$467:ProductFormatsInstances.this.JF[P5],implicitevidence$468:ProductFormatsInstances.this.JF[P6],implicitevidence$469:ProductFormatsInstances.this.JF[P7],implicitevidence$470:ProductFormatsInstances.this.JF[P8],implicitevidence$471:ProductFormatsInstances.this.JF[P9],implicitevidence$472:ProductFormatsInstances.this.JF[P10],implicitevidence$473:ProductFormatsInstances.this.JF[P11],implicitevidence$474:ProductFormatsInstances.this.JF[P12],implicitevidence$475:ProductFormatsInstances.this.JF[P13],implicitevidence$476:ProductFormatsInstances.this.JF[P14],implicitevidence$477:ProductFormatsInstances.this.JF[P15],implicitevidence$478:ProductFormatsInstances.this.JF[P16],implicitevidence$479:ProductFormatsInstances.this.JF[P17],implicitevidence$480:ProductFormatsInstances.this.JF[P18],implicitevidence$481:ProductFormatsInstances.this.JF[P19],implicitevidence$482:ProductFormatsInstances.this.JF[P20],implicitevidence$483:ProductFormatsInstances.this.JF[P21]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat21", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20, P21) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20], arg20: JF[P21], arg21: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat21", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat21[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21)=>T)(implicitevidence$441:ProductFormatsInstances.this.JF[P1],implicitevidence$442:ProductFormatsInstances.this.JF[P2],implicitevidence$443:ProductFormatsInstances.this.JF[P3],implicitevidence$444:ProductFormatsInstances.this.JF[P4],implicitevidence$445:ProductFormatsInstances.this.JF[P5],implicitevidence$446:ProductFormatsInstances.this.JF[P6],implicitevidence$447:ProductFormatsInstances.this.JF[P7],implicitevidence$448:ProductFormatsInstances.this.JF[P8],implicitevidence$449:ProductFormatsInstances.this.JF[P9],implicitevidence$450:ProductFormatsInstances.this.JF[P10],implicitevidence$451:ProductFormatsInstances.this.JF[P11],implicitevidence$452:ProductFormatsInstances.this.JF[P12],implicitevidence$453:ProductFormatsInstances.this.JF[P13],implicitevidence$454:ProductFormatsInstances.this.JF[P14],implicitevidence$455:ProductFormatsInstances.this.JF[P15],implicitevidence$456:ProductFormatsInstances.this.JF[P16],implicitevidence$457:ProductFormatsInstances.this.JF[P17],implicitevidence$458:ProductFormatsInstances.this.JF[P18],implicitevidence$459:ProductFormatsInstances.this.JF[P19],implicitevidence$460:ProductFormatsInstances.this.JF[P20],implicitevidence$461:ProductFormatsInstances.this.JF[P21],implicitevidence$462:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String, fieldName18: String, fieldName19: String, fieldName20: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String,fieldName18:String,fieldName19:String,fieldName20:String)(implicitevidence$421:ProductFormatsInstances.this.JF[P1],implicitevidence$422:ProductFormatsInstances.this.JF[P2],implicitevidence$423:ProductFormatsInstances.this.JF[P3],implicitevidence$424:ProductFormatsInstances.this.JF[P4],implicitevidence$425:ProductFormatsInstances.this.JF[P5],implicitevidence$426:ProductFormatsInstances.this.JF[P6],implicitevidence$427:ProductFormatsInstances.this.JF[P7],implicitevidence$428:ProductFormatsInstances.this.JF[P8],implicitevidence$429:ProductFormatsInstances.this.JF[P9],implicitevidence$430:ProductFormatsInstances.this.JF[P10],implicitevidence$431:ProductFormatsInstances.this.JF[P11],implicitevidence$432:ProductFormatsInstances.this.JF[P12],implicitevidence$433:ProductFormatsInstances.this.JF[P13],implicitevidence$434:ProductFormatsInstances.this.JF[P14],implicitevidence$435:ProductFormatsInstances.this.JF[P15],implicitevidence$436:ProductFormatsInstances.this.JF[P16],implicitevidence$437:ProductFormatsInstances.this.JF[P17],implicitevidence$438:ProductFormatsInstances.this.JF[P18],implicitevidence$439:ProductFormatsInstances.this.JF[P19],implicitevidence$440:ProductFormatsInstances.this.JF[P20]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat20", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20], arg20: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat20", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat20[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20)=>T)(implicitevidence$400:ProductFormatsInstances.this.JF[P1],implicitevidence$401:ProductFormatsInstances.this.JF[P2],implicitevidence$402:ProductFormatsInstances.this.JF[P3],implicitevidence$403:ProductFormatsInstances.this.JF[P4],implicitevidence$404:ProductFormatsInstances.this.JF[P5],implicitevidence$405:ProductFormatsInstances.this.JF[P6],implicitevidence$406:ProductFormatsInstances.this.JF[P7],implicitevidence$407:ProductFormatsInstances.this.JF[P8],implicitevidence$408:ProductFormatsInstances.this.JF[P9],implicitevidence$409:ProductFormatsInstances.this.JF[P10],implicitevidence$410:ProductFormatsInstances.this.JF[P11],implicitevidence$411:ProductFormatsInstances.this.JF[P12],implicitevidence$412:ProductFormatsInstances.this.JF[P13],implicitevidence$413:ProductFormatsInstances.this.JF[P14],implicitevidence$414:ProductFormatsInstances.this.JF[P15],implicitevidence$415:ProductFormatsInstances.this.JF[P16],implicitevidence$416:ProductFormatsInstances.this.JF[P17],implicitevidence$417:ProductFormatsInstances.this.JF[P18],implicitevidence$418:ProductFormatsInstances.this.JF[P19],implicitevidence$419:ProductFormatsInstances.this.JF[P20],implicitevidence$420:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String, fieldName18: String, fieldName19: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String,fieldName18:String,fieldName19:String)(implicitevidence$381:ProductFormatsInstances.this.JF[P1],implicitevidence$382:ProductFormatsInstances.this.JF[P2],implicitevidence$383:ProductFormatsInstances.this.JF[P3],implicitevidence$384:ProductFormatsInstances.this.JF[P4],implicitevidence$385:ProductFormatsInstances.this.JF[P5],implicitevidence$386:ProductFormatsInstances.this.JF[P6],implicitevidence$387:ProductFormatsInstances.this.JF[P7],implicitevidence$388:ProductFormatsInstances.this.JF[P8],implicitevidence$389:ProductFormatsInstances.this.JF[P9],implicitevidence$390:ProductFormatsInstances.this.JF[P10],implicitevidence$391:ProductFormatsInstances.this.JF[P11],implicitevidence$392:ProductFormatsInstances.this.JF[P12],implicitevidence$393:ProductFormatsInstances.this.JF[P13],implicitevidence$394:ProductFormatsInstances.this.JF[P14],implicitevidence$395:ProductFormatsInstances.this.JF[P15],implicitevidence$396:ProductFormatsInstances.this.JF[P16],implicitevidence$397:ProductFormatsInstances.this.JF[P17],implicitevidence$398:ProductFormatsInstances.this.JF[P18],implicitevidence$399:ProductFormatsInstances.this.JF[P19]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat19", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat19", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat19[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19)=>T)(implicitevidence$361:ProductFormatsInstances.this.JF[P1],implicitevidence$362:ProductFormatsInstances.this.JF[P2],implicitevidence$363:ProductFormatsInstances.this.JF[P3],implicitevidence$364:ProductFormatsInstances.this.JF[P4],implicitevidence$365:ProductFormatsInstances.this.JF[P5],implicitevidence$366:ProductFormatsInstances.this.JF[P6],implicitevidence$367:ProductFormatsInstances.this.JF[P7],implicitevidence$368:ProductFormatsInstances.this.JF[P8],implicitevidence$369:ProductFormatsInstances.this.JF[P9],implicitevidence$370:ProductFormatsInstances.this.JF[P10],implicitevidence$371:ProductFormatsInstances.this.JF[P11],implicitevidence$372:ProductFormatsInstances.this.JF[P12],implicitevidence$373:ProductFormatsInstances.this.JF[P13],implicitevidence$374:ProductFormatsInstances.this.JF[P14],implicitevidence$375:ProductFormatsInstances.this.JF[P15],implicitevidence$376:ProductFormatsInstances.this.JF[P16],implicitevidence$377:ProductFormatsInstances.this.JF[P17],implicitevidence$378:ProductFormatsInstances.this.JF[P18],implicitevidence$379:ProductFormatsInstances.this.JF[P19],implicitevidence$380:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String, fieldName18: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String,fieldName18:String)(implicitevidence$343:ProductFormatsInstances.this.JF[P1],implicitevidence$344:ProductFormatsInstances.this.JF[P2],implicitevidence$345:ProductFormatsInstances.this.JF[P3],implicitevidence$346:ProductFormatsInstances.this.JF[P4],implicitevidence$347:ProductFormatsInstances.this.JF[P5],implicitevidence$348:ProductFormatsInstances.this.JF[P6],implicitevidence$349:ProductFormatsInstances.this.JF[P7],implicitevidence$350:ProductFormatsInstances.this.JF[P8],implicitevidence$351:ProductFormatsInstances.this.JF[P9],implicitevidence$352:ProductFormatsInstances.this.JF[P10],implicitevidence$353:ProductFormatsInstances.this.JF[P11],implicitevidence$354:ProductFormatsInstances.this.JF[P12],implicitevidence$355:ProductFormatsInstances.this.JF[P13],implicitevidence$356:ProductFormatsInstances.this.JF[P14],implicitevidence$357:ProductFormatsInstances.this.JF[P15],implicitevidence$358:ProductFormatsInstances.this.JF[P16],implicitevidence$359:ProductFormatsInstances.this.JF[P17],implicitevidence$360:ProductFormatsInstances.this.JF[P18]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat18", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat18", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat18[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18)=>T)(implicitevidence$324:ProductFormatsInstances.this.JF[P1],implicitevidence$325:ProductFormatsInstances.this.JF[P2],implicitevidence$326:ProductFormatsInstances.this.JF[P3],implicitevidence$327:ProductFormatsInstances.this.JF[P4],implicitevidence$328:ProductFormatsInstances.this.JF[P5],implicitevidence$329:ProductFormatsInstances.this.JF[P6],implicitevidence$330:ProductFormatsInstances.this.JF[P7],implicitevidence$331:ProductFormatsInstances.this.JF[P8],implicitevidence$332:ProductFormatsInstances.this.JF[P9],implicitevidence$333:ProductFormatsInstances.this.JF[P10],implicitevidence$334:ProductFormatsInstances.this.JF[P11],implicitevidence$335:ProductFormatsInstances.this.JF[P12],implicitevidence$336:ProductFormatsInstances.this.JF[P13],implicitevidence$337:ProductFormatsInstances.this.JF[P14],implicitevidence$338:ProductFormatsInstances.this.JF[P15],implicitevidence$339:ProductFormatsInstances.this.JF[P16],implicitevidence$340:ProductFormatsInstances.this.JF[P17],implicitevidence$341:ProductFormatsInstances.this.JF[P18],implicitevidence$342:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String)(implicitevidence$307:ProductFormatsInstances.this.JF[P1],implicitevidence$308:ProductFormatsInstances.this.JF[P2],implicitevidence$309:ProductFormatsInstances.this.JF[P3],implicitevidence$310:ProductFormatsInstances.this.JF[P4],implicitevidence$311:ProductFormatsInstances.this.JF[P5],implicitevidence$312:ProductFormatsInstances.this.JF[P6],implicitevidence$313:ProductFormatsInstances.this.JF[P7],implicitevidence$314:ProductFormatsInstances.this.JF[P8],implicitevidence$315:ProductFormatsInstances.this.JF[P9],implicitevidence$316:ProductFormatsInstances.this.JF[P10],implicitevidence$317:ProductFormatsInstances.this.JF[P11],implicitevidence$318:ProductFormatsInstances.this.JF[P12],implicitevidence$319:ProductFormatsInstances.this.JF[P13],implicitevidence$320:ProductFormatsInstances.this.JF[P14],implicitevidence$321:ProductFormatsInstances.this.JF[P15],implicitevidence$322:ProductFormatsInstances.this.JF[P16],implicitevidence$323:ProductFormatsInstances.this.JF[P17]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat17", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat17", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat17[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17)=>T)(implicitevidence$289:ProductFormatsInstances.this.JF[P1],implicitevidence$290:ProductFormatsInstances.this.JF[P2],implicitevidence$291:ProductFormatsInstances.this.JF[P3],implicitevidence$292:ProductFormatsInstances.this.JF[P4],implicitevidence$293:ProductFormatsInstances.this.JF[P5],implicitevidence$294:ProductFormatsInstances.this.JF[P6],implicitevidence$295:ProductFormatsInstances.this.JF[P7],implicitevidence$296:ProductFormatsInstances.this.JF[P8],implicitevidence$297:ProductFormatsInstances.this.JF[P9],implicitevidence$298:ProductFormatsInstances.this.JF[P10],implicitevidence$299:ProductFormatsInstances.this.JF[P11],implicitevidence$300:ProductFormatsInstances.this.JF[P12],implicitevidence$301:ProductFormatsInstances.this.JF[P13],implicitevidence$302:ProductFormatsInstances.this.JF[P14],implicitevidence$303:ProductFormatsInstances.this.JF[P15],implicitevidence$304:ProductFormatsInstances.this.JF[P16],implicitevidence$305:ProductFormatsInstances.this.JF[P17],implicitevidence$306:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String)(implicitevidence$273:ProductFormatsInstances.this.JF[P1],implicitevidence$274:ProductFormatsInstances.this.JF[P2],implicitevidence$275:ProductFormatsInstances.this.JF[P3],implicitevidence$276:ProductFormatsInstances.this.JF[P4],implicitevidence$277:ProductFormatsInstances.this.JF[P5],implicitevidence$278:ProductFormatsInstances.this.JF[P6],implicitevidence$279:ProductFormatsInstances.this.JF[P7],implicitevidence$280:ProductFormatsInstances.this.JF[P8],implicitevidence$281:ProductFormatsInstances.this.JF[P9],implicitevidence$282:ProductFormatsInstances.this.JF[P10],implicitevidence$283:ProductFormatsInstances.this.JF[P11],implicitevidence$284:ProductFormatsInstances.this.JF[P12],implicitevidence$285:ProductFormatsInstances.this.JF[P13],implicitevidence$286:ProductFormatsInstances.this.JF[P14],implicitevidence$287:ProductFormatsInstances.this.JF[P15],implicitevidence$288:ProductFormatsInstances.this.JF[P16]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat16", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat16", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat16[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16)=>T)(implicitevidence$256:ProductFormatsInstances.this.JF[P1],implicitevidence$257:ProductFormatsInstances.this.JF[P2],implicitevidence$258:ProductFormatsInstances.this.JF[P3],implicitevidence$259:ProductFormatsInstances.this.JF[P4],implicitevidence$260:ProductFormatsInstances.this.JF[P5],implicitevidence$261:ProductFormatsInstances.this.JF[P6],implicitevidence$262:ProductFormatsInstances.this.JF[P7],implicitevidence$263:ProductFormatsInstances.this.JF[P8],implicitevidence$264:ProductFormatsInstances.this.JF[P9],implicitevidence$265:ProductFormatsInstances.this.JF[P10],implicitevidence$266:ProductFormatsInstances.this.JF[P11],implicitevidence$267:ProductFormatsInstances.this.JF[P12],implicitevidence$268:ProductFormatsInstances.this.JF[P13],implicitevidence$269:ProductFormatsInstances.this.JF[P14],implicitevidence$270:ProductFormatsInstances.this.JF[P15],implicitevidence$271:ProductFormatsInstances.this.JF[P16],implicitevidence$272:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String)(implicitevidence$241:ProductFormatsInstances.this.JF[P1],implicitevidence$242:ProductFormatsInstances.this.JF[P2],implicitevidence$243:ProductFormatsInstances.this.JF[P3],implicitevidence$244:ProductFormatsInstances.this.JF[P4],implicitevidence$245:ProductFormatsInstances.this.JF[P5],implicitevidence$246:ProductFormatsInstances.this.JF[P6],implicitevidence$247:ProductFormatsInstances.this.JF[P7],implicitevidence$248:ProductFormatsInstances.this.JF[P8],implicitevidence$249:ProductFormatsInstances.this.JF[P9],implicitevidence$250:ProductFormatsInstances.this.JF[P10],implicitevidence$251:ProductFormatsInstances.this.JF[P11],implicitevidence$252:ProductFormatsInstances.this.JF[P12],implicitevidence$253:ProductFormatsInstances.this.JF[P13],implicitevidence$254:ProductFormatsInstances.this.JF[P14],implicitevidence$255:ProductFormatsInstances.this.JF[P15]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat15", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat15", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat15[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15)=>T)(implicitevidence$225:ProductFormatsInstances.this.JF[P1],implicitevidence$226:ProductFormatsInstances.this.JF[P2],implicitevidence$227:ProductFormatsInstances.this.JF[P3],implicitevidence$228:ProductFormatsInstances.this.JF[P4],implicitevidence$229:ProductFormatsInstances.this.JF[P5],implicitevidence$230:ProductFormatsInstances.this.JF[P6],implicitevidence$231:ProductFormatsInstances.this.JF[P7],implicitevidence$232:ProductFormatsInstances.this.JF[P8],implicitevidence$233:ProductFormatsInstances.this.JF[P9],implicitevidence$234:ProductFormatsInstances.this.JF[P10],implicitevidence$235:ProductFormatsInstances.this.JF[P11],implicitevidence$236:ProductFormatsInstances.this.JF[P12],implicitevidence$237:ProductFormatsInstances.this.JF[P13],implicitevidence$238:ProductFormatsInstances.this.JF[P14],implicitevidence$239:ProductFormatsInstances.this.JF[P15],implicitevidence$240:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String)(implicitevidence$211:ProductFormatsInstances.this.JF[P1],implicitevidence$212:ProductFormatsInstances.this.JF[P2],implicitevidence$213:ProductFormatsInstances.this.JF[P3],implicitevidence$214:ProductFormatsInstances.this.JF[P4],implicitevidence$215:ProductFormatsInstances.this.JF[P5],implicitevidence$216:ProductFormatsInstances.this.JF[P6],implicitevidence$217:ProductFormatsInstances.this.JF[P7],implicitevidence$218:ProductFormatsInstances.this.JF[P8],implicitevidence$219:ProductFormatsInstances.this.JF[P9],implicitevidence$220:ProductFormatsInstances.this.JF[P10],implicitevidence$221:ProductFormatsInstances.this.JF[P11],implicitevidence$222:ProductFormatsInstances.this.JF[P12],implicitevidence$223:ProductFormatsInstances.this.JF[P13],implicitevidence$224:ProductFormatsInstances.this.JF[P14]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat14", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat14", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat14[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14)=>T)(implicitevidence$196:ProductFormatsInstances.this.JF[P1],implicitevidence$197:ProductFormatsInstances.this.JF[P2],implicitevidence$198:ProductFormatsInstances.this.JF[P3],implicitevidence$199:ProductFormatsInstances.this.JF[P4],implicitevidence$200:ProductFormatsInstances.this.JF[P5],implicitevidence$201:ProductFormatsInstances.this.JF[P6],implicitevidence$202:ProductFormatsInstances.this.JF[P7],implicitevidence$203:ProductFormatsInstances.this.JF[P8],implicitevidence$204:ProductFormatsInstances.this.JF[P9],implicitevidence$205:ProductFormatsInstances.this.JF[P10],implicitevidence$206:ProductFormatsInstances.this.JF[P11],implicitevidence$207:ProductFormatsInstances.this.JF[P12],implicitevidence$208:ProductFormatsInstances.this.JF[P13],implicitevidence$209:ProductFormatsInstances.this.JF[P14],implicitevidence$210:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String)(implicitevidence$183:ProductFormatsInstances.this.JF[P1],implicitevidence$184:ProductFormatsInstances.this.JF[P2],implicitevidence$185:ProductFormatsInstances.this.JF[P3],implicitevidence$186:ProductFormatsInstances.this.JF[P4],implicitevidence$187:ProductFormatsInstances.this.JF[P5],implicitevidence$188:ProductFormatsInstances.this.JF[P6],implicitevidence$189:ProductFormatsInstances.this.JF[P7],implicitevidence$190:ProductFormatsInstances.this.JF[P8],implicitevidence$191:ProductFormatsInstances.this.JF[P9],implicitevidence$192:ProductFormatsInstances.this.JF[P10],implicitevidence$193:ProductFormatsInstances.this.JF[P11],implicitevidence$194:ProductFormatsInstances.this.JF[P12],implicitevidence$195:ProductFormatsInstances.this.JF[P13]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat13", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat13", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat13[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13)=>T)(implicitevidence$169:ProductFormatsInstances.this.JF[P1],implicitevidence$170:ProductFormatsInstances.this.JF[P2],implicitevidence$171:ProductFormatsInstances.this.JF[P3],implicitevidence$172:ProductFormatsInstances.this.JF[P4],implicitevidence$173:ProductFormatsInstances.this.JF[P5],implicitevidence$174:ProductFormatsInstances.this.JF[P6],implicitevidence$175:ProductFormatsInstances.this.JF[P7],implicitevidence$176:ProductFormatsInstances.this.JF[P8],implicitevidence$177:ProductFormatsInstances.this.JF[P9],implicitevidence$178:ProductFormatsInstances.this.JF[P10],implicitevidence$179:ProductFormatsInstances.this.JF[P11],implicitevidence$180:ProductFormatsInstances.this.JF[P12],implicitevidence$181:ProductFormatsInstances.this.JF[P13],implicitevidence$182:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String)(implicitevidence$157:ProductFormatsInstances.this.JF[P1],implicitevidence$158:ProductFormatsInstances.this.JF[P2],implicitevidence$159:ProductFormatsInstances.this.JF[P3],implicitevidence$160:ProductFormatsInstances.this.JF[P4],implicitevidence$161:ProductFormatsInstances.this.JF[P5],implicitevidence$162:ProductFormatsInstances.this.JF[P6],implicitevidence$163:ProductFormatsInstances.this.JF[P7],implicitevidence$164:ProductFormatsInstances.this.JF[P8],implicitevidence$165:ProductFormatsInstances.this.JF[P9],implicitevidence$166:ProductFormatsInstances.this.JF[P10],implicitevidence$167:ProductFormatsInstances.this.JF[P11],implicitevidence$168:ProductFormatsInstances.this.JF[P12]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat12", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat12", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat12[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12)=>T)(implicitevidence$144:ProductFormatsInstances.this.JF[P1],implicitevidence$145:ProductFormatsInstances.this.JF[P2],implicitevidence$146:ProductFormatsInstances.this.JF[P3],implicitevidence$147:ProductFormatsInstances.this.JF[P4],implicitevidence$148:ProductFormatsInstances.this.JF[P5],implicitevidence$149:ProductFormatsInstances.this.JF[P6],implicitevidence$150:ProductFormatsInstances.this.JF[P7],implicitevidence$151:ProductFormatsInstances.this.JF[P8],implicitevidence$152:ProductFormatsInstances.this.JF[P9],implicitevidence$153:ProductFormatsInstances.this.JF[P10],implicitevidence$154:ProductFormatsInstances.this.JF[P11],implicitevidence$155:ProductFormatsInstances.this.JF[P12],implicitevidence$156:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String)(implicitevidence$133:ProductFormatsInstances.this.JF[P1],implicitevidence$134:ProductFormatsInstances.this.JF[P2],implicitevidence$135:ProductFormatsInstances.this.JF[P3],implicitevidence$136:ProductFormatsInstances.this.JF[P4],implicitevidence$137:ProductFormatsInstances.this.JF[P5],implicitevidence$138:ProductFormatsInstances.this.JF[P6],implicitevidence$139:ProductFormatsInstances.this.JF[P7],implicitevidence$140:ProductFormatsInstances.this.JF[P8],implicitevidence$141:ProductFormatsInstances.this.JF[P9],implicitevidence$142:ProductFormatsInstances.this.JF[P10],implicitevidence$143:ProductFormatsInstances.this.JF[P11]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat11", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat11", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat11[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11)=>T)(implicitevidence$121:ProductFormatsInstances.this.JF[P1],implicitevidence$122:ProductFormatsInstances.this.JF[P2],implicitevidence$123:ProductFormatsInstances.this.JF[P3],implicitevidence$124:ProductFormatsInstances.this.JF[P4],implicitevidence$125:ProductFormatsInstances.this.JF[P5],implicitevidence$126:ProductFormatsInstances.this.JF[P6],implicitevidence$127:ProductFormatsInstances.this.JF[P7],implicitevidence$128:ProductFormatsInstances.this.JF[P8],implicitevidence$129:ProductFormatsInstances.this.JF[P9],implicitevidence$130:ProductFormatsInstances.this.JF[P10],implicitevidence$131:ProductFormatsInstances.this.JF[P11],implicitevidence$132:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String)(implicitevidence$111:ProductFormatsInstances.this.JF[P1],implicitevidence$112:ProductFormatsInstances.this.JF[P2],implicitevidence$113:ProductFormatsInstances.this.JF[P3],implicitevidence$114:ProductFormatsInstances.this.JF[P4],implicitevidence$115:ProductFormatsInstances.this.JF[P5],implicitevidence$116:ProductFormatsInstances.this.JF[P6],implicitevidence$117:ProductFormatsInstances.this.JF[P7],implicitevidence$118:ProductFormatsInstances.this.JF[P8],implicitevidence$119:ProductFormatsInstances.this.JF[P9],implicitevidence$120:ProductFormatsInstances.this.JF[P10]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat10", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat10", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat10[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10)=>T)(implicitevidence$100:ProductFormatsInstances.this.JF[P1],implicitevidence$101:ProductFormatsInstances.this.JF[P2],implicitevidence$102:ProductFormatsInstances.this.JF[P3],implicitevidence$103:ProductFormatsInstances.this.JF[P4],implicitevidence$104:ProductFormatsInstances.this.JF[P5],implicitevidence$105:ProductFormatsInstances.this.JF[P6],implicitevidence$106:ProductFormatsInstances.this.JF[P7],implicitevidence$107:ProductFormatsInstances.this.JF[P8],implicitevidence$108:ProductFormatsInstances.this.JF[P9],implicitevidence$109:ProductFormatsInstances.this.JF[P10],implicitevidence$110:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String)(implicitevidence$91:ProductFormatsInstances.this.JF[P1],implicitevidence$92:ProductFormatsInstances.this.JF[P2],implicitevidence$93:ProductFormatsInstances.this.JF[P3],implicitevidence$94:ProductFormatsInstances.this.JF[P4],implicitevidence$95:ProductFormatsInstances.this.JF[P5],implicitevidence$96:ProductFormatsInstances.this.JF[P6],implicitevidence$97:ProductFormatsInstances.this.JF[P7],implicitevidence$98:ProductFormatsInstances.this.JF[P8],implicitevidence$99:ProductFormatsInstances.this.JF[P9]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat9", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat9", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat9[P1,P2,P3,P4,P5,P6,P7,P8,P9,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9)=>T)(implicitevidence$81:ProductFormatsInstances.this.JF[P1],implicitevidence$82:ProductFormatsInstances.this.JF[P2],implicitevidence$83:ProductFormatsInstances.this.JF[P3],implicitevidence$84:ProductFormatsInstances.this.JF[P4],implicitevidence$85:ProductFormatsInstances.this.JF[P5],implicitevidence$86:ProductFormatsInstances.this.JF[P6],implicitevidence$87:ProductFormatsInstances.this.JF[P7],implicitevidence$88:ProductFormatsInstances.this.JF[P8],implicitevidence$89:ProductFormatsInstances.this.JF[P9],implicitevidence$90:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String)(implicitevidence$73:ProductFormatsInstances.this.JF[P1],implicitevidence$74:ProductFormatsInstances.this.JF[P2],implicitevidence$75:ProductFormatsInstances.this.JF[P3],implicitevidence$76:ProductFormatsInstances.this.JF[P4],implicitevidence$77:ProductFormatsInstances.this.JF[P5],implicitevidence$78:ProductFormatsInstances.this.JF[P6],implicitevidence$79:ProductFormatsInstances.this.JF[P7],implicitevidence$80:ProductFormatsInstances.this.JF[P8]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat8", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat8", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat8[P1,P2,P3,P4,P5,P6,P7,P8,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8)=>T)(implicitevidence$64:ProductFormatsInstances.this.JF[P1],implicitevidence$65:ProductFormatsInstances.this.JF[P2],implicitevidence$66:ProductFormatsInstances.this.JF[P3],implicitevidence$67:ProductFormatsInstances.this.JF[P4],implicitevidence$68:ProductFormatsInstances.this.JF[P5],implicitevidence$69:ProductFormatsInstances.this.JF[P6],implicitevidence$70:ProductFormatsInstances.this.JF[P7],implicitevidence$71:ProductFormatsInstances.this.JF[P8],implicitevidence$72:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String)(implicitevidence$57:ProductFormatsInstances.this.JF[P1],implicitevidence$58:ProductFormatsInstances.this.JF[P2],implicitevidence$59:ProductFormatsInstances.this.JF[P3],implicitevidence$60:ProductFormatsInstances.this.JF[P4],implicitevidence$61:ProductFormatsInstances.this.JF[P5],implicitevidence$62:ProductFormatsInstances.this.JF[P6],implicitevidence$63:ProductFormatsInstances.this.JF[P7]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat7", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat7", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat7[P1,P2,P3,P4,P5,P6,P7,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7)=>T)(implicitevidence$49:ProductFormatsInstances.this.JF[P1],implicitevidence$50:ProductFormatsInstances.this.JF[P2],implicitevidence$51:ProductFormatsInstances.this.JF[P3],implicitevidence$52:ProductFormatsInstances.this.JF[P4],implicitevidence$53:ProductFormatsInstances.this.JF[P5],implicitevidence$54:ProductFormatsInstances.this.JF[P6],implicitevidence$55:ProductFormatsInstances.this.JF[P7],implicitevidence$56:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat[P1,P2,P3,P4,P5,P6,T<:Product](construct:(P1,P2,P3,P4,P5,P6)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String)(implicitevidence$43:ProductFormatsInstances.this.JF[P1],implicitevidence$44:ProductFormatsInstances.this.JF[P2],implicitevidence$45:ProductFormatsInstances.this.JF[P3],implicitevidence$46:ProductFormatsInstances.this.JF[P4],implicitevidence$47:ProductFormatsInstances.this.JF[P5],implicitevidence$48:ProductFormatsInstances.this.JF[P6]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat6", "tail" : "(construct: (P1, P2, P3, P4, P5, P6) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat6", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat6[P1,P2,P3,P4,P5,P6,T<:Product](construct:(P1,P2,P3,P4,P5,P6)=>T)(implicitevidence$36:ProductFormatsInstances.this.JF[P1],implicitevidence$37:ProductFormatsInstances.this.JF[P2],implicitevidence$38:ProductFormatsInstances.this.JF[P3],implicitevidence$39:ProductFormatsInstances.this.JF[P4],implicitevidence$40:ProductFormatsInstances.this.JF[P5],implicitevidence$41:ProductFormatsInstances.this.JF[P6],implicitevidence$42:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat[P1,P2,P3,P4,P5,T<:Product](construct:(P1,P2,P3,P4,P5)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String)(implicitevidence$31:ProductFormatsInstances.this.JF[P1],implicitevidence$32:ProductFormatsInstances.this.JF[P2],implicitevidence$33:ProductFormatsInstances.this.JF[P3],implicitevidence$34:ProductFormatsInstances.this.JF[P4],implicitevidence$35:ProductFormatsInstances.this.JF[P5]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat5", "tail" : "(construct: (P1, P2, P3, P4, P5) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat5", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat5[P1,P2,P3,P4,P5,T<:Product](construct:(P1,P2,P3,P4,P5)=>T)(implicitevidence$25:ProductFormatsInstances.this.JF[P1],implicitevidence$26:ProductFormatsInstances.this.JF[P2],implicitevidence$27:ProductFormatsInstances.this.JF[P3],implicitevidence$28:ProductFormatsInstances.this.JF[P4],implicitevidence$29:ProductFormatsInstances.this.JF[P5],implicitevidence$30:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat[P1,P2,P3,P4,T<:Product](construct:(P1,P2,P3,P4)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String)(implicitevidence$21:ProductFormatsInstances.this.JF[P1],implicitevidence$22:ProductFormatsInstances.this.JF[P2],implicitevidence$23:ProductFormatsInstances.this.JF[P3],implicitevidence$24:ProductFormatsInstances.this.JF[P4]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat4", "tail" : "(construct: (P1, P2, P3, P4) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat4", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat4[P1,P2,P3,P4,T<:Product](construct:(P1,P2,P3,P4)=>T)(implicitevidence$16:ProductFormatsInstances.this.JF[P1],implicitevidence$17:ProductFormatsInstances.this.JF[P2],implicitevidence$18:ProductFormatsInstances.this.JF[P3],implicitevidence$19:ProductFormatsInstances.this.JF[P4],implicitevidence$20:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat[P1,P2,P3,T<:Product](construct:(P1,P2,P3)=>T,fieldName1:String,fieldName2:String,fieldName3:String)(implicitevidence$13:ProductFormatsInstances.this.JF[P1],implicitevidence$14:ProductFormatsInstances.this.JF[P2],implicitevidence$15:ProductFormatsInstances.this.JF[P3]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat3", "tail" : "(construct: (P1, P2, P3) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat3", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat3[P1,P2,P3,T<:Product](construct:(P1,P2,P3)=>T)(implicitevidence$9:ProductFormatsInstances.this.JF[P1],implicitevidence$10:ProductFormatsInstances.this.JF[P2],implicitevidence$11:ProductFormatsInstances.this.JF[P3],implicitevidence$12:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2) â‡’ T, fieldName1: String, fieldName2: String)(arg0: JF[P1], arg1: JF[P2]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat[P1,P2,T<:Product](construct:(P1,P2)=>T,fieldName1:String,fieldName2:String)(implicitevidence$7:ProductFormatsInstances.this.JF[P1],implicitevidence$8:ProductFormatsInstances.this.JF[P2]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat2", "tail" : "(construct: (P1, P2) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat2", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat2[P1,P2,T<:Product](construct:(P1,P2)=>T)(implicitevidence$4:ProductFormatsInstances.this.JF[P1],implicitevidence$5:ProductFormatsInstances.this.JF[P2],implicitevidence$6:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1) â‡’ T, fieldName1: String)(arg0: JF[P1]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat[P1,T<:Product](construct:P1=>T,fieldName1:String)(implicitevidence$3:ProductFormatsInstances.this.JF[P1]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat1", "tail" : "(construct: (P1) â‡’ T)(arg0: JF[P1], arg1: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat1", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#jsonFormat1[P1,T<:Product](construct:P1=>T)(implicitevidence$1:ProductFormatsInstances.this.JF[P1],implicitevidence$2:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "viaSeq", "tail" : "(f: (Seq[T]) â‡’ I)(arg0: JsonFormat[T]): RootJsonFormat[I]", "member" : "spray.json.CollectionFormats.viaSeq", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#viaSeq[I<:Iterable[T],T](f:scala.collection.immutable.Seq[T]=>I)(implicitevidence$17:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[I]", "kind" : "def"}, {"label" : "setFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Set[T]]", "member" : "spray.json.CollectionFormats.setFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#setFormat[T](implicitevidence$16:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.Set[T]]", "kind" : "implicit def"}, {"label" : "linearSeqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[LinearSeq[T]]", "member" : "spray.json.CollectionFormats.linearSeqFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#linearSeqFormat[T](implicitevidence$15:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.LinearSeq[T]]", "kind" : "implicit def"}, {"label" : "indexedSeqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[IndexedSeq[T]]", "member" : "spray.json.CollectionFormats.indexedSeqFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#indexedSeqFormat[T](implicitevidence$14:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[IndexedSeq[T]]", "kind" : "implicit def"}, {"label" : "seqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Seq[T]]", "member" : "spray.json.CollectionFormats.seqFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#seqFormat[T](implicitevidence$13:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[Seq[T]]", "kind" : "implicit def"}, {"label" : "iterableFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Iterable[T]]", "member" : "spray.json.CollectionFormats.iterableFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#iterableFormat[T](implicitevidence$12:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[Iterable[T]]", "kind" : "implicit def"}, {"label" : "vectorFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Vector[T]]", "member" : "spray.json.CollectionFormats.vectorFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#vectorFormat[T](implicitevidence$11:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[Vector[T]]", "kind" : "implicit def"}, {"label" : "immSetFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Set[T]]", "member" : "spray.json.CollectionFormats.immSetFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#immSetFormat[T](implicitevidence$10:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.immutable.Set[T]]", "kind" : "implicit def"}, {"label" : "immLinearSeqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[LinearSeq[T]]", "member" : "spray.json.CollectionFormats.immLinearSeqFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#immLinearSeqFormat[T](implicitevidence$9:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.immutable.LinearSeq[T]]", "kind" : "implicit def"}, {"label" : "immIndexedSeqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[IndexedSeq[T]]", "member" : "spray.json.CollectionFormats.immIndexedSeqFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#immIndexedSeqFormat[T](implicitevidence$8:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.immutable.IndexedSeq[T]]", "kind" : "implicit def"}, {"label" : "immSeqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Seq[T]]", "member" : "spray.json.CollectionFormats.immSeqFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#immSeqFormat[T](implicitevidence$7:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.immutable.Seq[T]]", "kind" : "implicit def"}, {"label" : "immIterableFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Iterable[T]]", "member" : "spray.json.CollectionFormats.immIterableFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#immIterableFormat[T](implicitevidence$6:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.immutable.Iterable[T]]", "kind" : "implicit def"}, {"label" : "mapFormat", "tail" : "(arg0: JsonFormat[K], arg1: JsonFormat[V]): RootJsonFormat[Map[K, V]] { def write(m: Map[K,V]): spray.json.JsObject }", "member" : "spray.json.CollectionFormats.mapFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#mapFormat[K,V](implicitevidence$4:spray.json.JsonFormat[K],implicitevidence$5:spray.json.JsonFormat[V]):spray.json.RootJsonFormat[Map[K,V]]{defwrite(m:Map[K,V]):spray.json.JsObject}", "kind" : "implicit def"}, {"label" : "arrayFormat", "tail" : "(arg0: JsonFormat[T], arg1: ClassManifest[T]): RootJsonFormat[Array[T]] { def write(array: Array[T]): spray.json.JsArray }", "member" : "spray.json.CollectionFormats.arrayFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#arrayFormat[T](implicitevidence$2:spray.json.JsonFormat[T],implicitevidence$3:ClassManifest[T]):spray.json.RootJsonFormat[Array[T]]{defwrite(array:Array[T]):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "listFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[List[T]] { def write(list: List[T]): spray.json.JsArray }", "member" : "spray.json.CollectionFormats.listFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#listFormat[T](implicitevidence$1:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[List[T]]{defwrite(list:List[T]):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple7Format", "tail" : "(arg0: JF[A], arg1: JF[B], arg2: JF[C], arg3: JF[D], arg4: JF[E], arg5: JF[F], arg6: JF[G]): RootJsonFormat[(A, B, C, D, E, F, G)] { def write(t: (A, B, C, D, E, F, G)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple7Format", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#tuple7Format[A,B,C,D,E,F,G](implicitevidence$26:StandardFormats.this.JF[A],implicitevidence$27:StandardFormats.this.JF[B],implicitevidence$28:StandardFormats.this.JF[C],implicitevidence$29:StandardFormats.this.JF[D],implicitevidence$30:StandardFormats.this.JF[E],implicitevidence$31:StandardFormats.this.JF[F],implicitevidence$32:StandardFormats.this.JF[G]):spray.json.RootJsonFormat[(A,B,C,D,E,F,G)]{defwrite(t:(A,B,C,D,E,F,G)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple6Format", "tail" : "(arg0: JF[A], arg1: JF[B], arg2: JF[C], arg3: JF[D], arg4: JF[E], arg5: JF[F]): RootJsonFormat[(A, B, C, D, E, F)] { def write(t: (A, B, C, D, E, F)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple6Format", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#tuple6Format[A,B,C,D,E,F](implicitevidence$20:StandardFormats.this.JF[A],implicitevidence$21:StandardFormats.this.JF[B],implicitevidence$22:StandardFormats.this.JF[C],implicitevidence$23:StandardFormats.this.JF[D],implicitevidence$24:StandardFormats.this.JF[E],implicitevidence$25:StandardFormats.this.JF[F]):spray.json.RootJsonFormat[(A,B,C,D,E,F)]{defwrite(t:(A,B,C,D,E,F)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple5Format", "tail" : "(arg0: JF[A], arg1: JF[B], arg2: JF[C], arg3: JF[D], arg4: JF[E]): RootJsonFormat[(A, B, C, D, E)] { def write(t: (A, B, C, D, E)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple5Format", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#tuple5Format[A,B,C,D,E](implicitevidence$15:StandardFormats.this.JF[A],implicitevidence$16:StandardFormats.this.JF[B],implicitevidence$17:StandardFormats.this.JF[C],implicitevidence$18:StandardFormats.this.JF[D],implicitevidence$19:StandardFormats.this.JF[E]):spray.json.RootJsonFormat[(A,B,C,D,E)]{defwrite(t:(A,B,C,D,E)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple4Format", "tail" : "(arg0: JF[A], arg1: JF[B], arg2: JF[C], arg3: JF[D]): RootJsonFormat[(A, B, C, D)] { def write(t: (A, B, C, D)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple4Format", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#tuple4Format[A,B,C,D](implicitevidence$11:StandardFormats.this.JF[A],implicitevidence$12:StandardFormats.this.JF[B],implicitevidence$13:StandardFormats.this.JF[C],implicitevidence$14:StandardFormats.this.JF[D]):spray.json.RootJsonFormat[(A,B,C,D)]{defwrite(t:(A,B,C,D)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple3Format", "tail" : "(arg0: JF[A], arg1: JF[B], arg2: JF[C]): RootJsonFormat[(A, B, C)] { def write(t: (A, B, C)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple3Format", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#tuple3Format[A,B,C](implicitevidence$8:StandardFormats.this.JF[A],implicitevidence$9:StandardFormats.this.JF[B],implicitevidence$10:StandardFormats.this.JF[C]):spray.json.RootJsonFormat[(A,B,C)]{defwrite(t:(A,B,C)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple2Format", "tail" : "(arg0: JF[A], arg1: JF[B]): RootJsonFormat[(A, B)] { def write(t: (A, B)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple2Format", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#tuple2Format[A,B](implicitevidence$6:StandardFormats.this.JF[A],implicitevidence$7:StandardFormats.this.JF[B]):spray.json.RootJsonFormat[(A,B)]{defwrite(t:(A,B)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple1Format", "tail" : "(arg0: JF[A]): JF[(A)]", "member" : "spray.json.StandardFormats.tuple1Format", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#tuple1Format[A](implicitevidence$5:StandardFormats.this.JF[A]):StandardFormats.this.JF[(A,)]", "kind" : "implicit def"}, {"label" : "eitherFormat", "tail" : "(arg0: JF[A], arg1: JF[B]): JF[Either[A, B]]", "member" : "spray.json.StandardFormats.eitherFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#eitherFormat[A,B](implicitevidence$3:StandardFormats.this.JF[A],implicitevidence$4:StandardFormats.this.JF[B]):StandardFormats.this.JF[Either[A,B]]", "kind" : "implicit def"}, {"label" : "optionFormat", "tail" : "(arg0: JF[T]): JF[Option[T]]", "member" : "spray.json.StandardFormats.optionFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#optionFormat[T](implicitevidence$1:StandardFormats.this.JF[T]):StandardFormats.this.JF[Option[T]]", "kind" : "implicit def"}, {"label" : "sprayJsValueMarshaller", "tail" : "(printer: JsonPrinter): ToEntityMarshaller[JsValue]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsValueMarshaller", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#sprayJsValueMarshaller(implicitprinter:spray.json.JsonPrinter):akka.http.scaladsl.marshalling.ToEntityMarshaller[spray.json.JsValue]", "kind" : "implicit def"}, {"label" : "sprayJsonMarshaller", "tail" : "(writer: RootJsonWriter[T], printer: JsonPrinter): ToEntityMarshaller[T]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsonMarshaller", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#sprayJsonMarshaller[T](implicitwriter:spray.json.RootJsonWriter[T],implicitprinter:spray.json.JsonPrinter):akka.http.scaladsl.marshalling.ToEntityMarshaller[T]", "kind" : "implicit def"}, {"label" : "sprayJsonMarshallerConverter", "tail" : "(writer: RootJsonWriter[T])(printer: JsonPrinter): ToEntityMarshaller[T]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsonMarshallerConverter", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#sprayJsonMarshallerConverter[T](writer:spray.json.RootJsonWriter[T])(implicitprinter:spray.json.JsonPrinter):akka.http.scaladsl.marshalling.ToEntityMarshaller[T]", "kind" : "implicit def"}, {"label" : "sprayJsonSourceReader", "tail" : "(reader: RootJsonReader[T], support: EntityStreamingSupport): FromEntityUnmarshaller[Source[T, NotUsed]]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsonSourceReader", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#sprayJsonSourceReader[T](implicitreader:spray.json.RootJsonReader[T],implicitsupport:akka.http.scaladsl.common.EntityStreamingSupport):akka.http.scaladsl.unmarshalling.FromEntityUnmarshaller[akka.stream.scaladsl.Source[T,akka.NotUsed]]", "kind" : "implicit def"}, {"label" : "sprayJsonByteStringUnmarshaller", "tail" : "(reader: RootJsonReader[T]): FromByteStringUnmarshaller[T]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsonByteStringUnmarshaller", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#sprayJsonByteStringUnmarshaller[T](implicitreader:spray.json.RootJsonReader[T]):akka.http.scaladsl.unmarshalling.FromByteStringUnmarshaller[T]", "kind" : "implicit def"}, {"label" : "sprayJsValueByteStringUnmarshaller", "tail" : "(): FromByteStringUnmarshaller[JsValue]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsValueByteStringUnmarshaller", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#sprayJsValueByteStringUnmarshaller[T]:akka.http.scaladsl.unmarshalling.FromByteStringUnmarshaller[spray.json.JsValue]", "kind" : "implicit def"}, {"label" : "sprayJsValueUnmarshaller", "tail" : "(): FromEntityUnmarshaller[JsValue]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsValueUnmarshaller", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#sprayJsValueUnmarshaller:akka.http.scaladsl.unmarshalling.FromEntityUnmarshaller[spray.json.JsValue]", "kind" : "implicit def"}, {"label" : "sprayJsonUnmarshaller", "tail" : "(reader: RootJsonReader[T]): FromEntityUnmarshaller[T]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsonUnmarshaller", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#sprayJsonUnmarshaller[T](implicitreader:spray.json.RootJsonReader[T]):akka.http.scaladsl.unmarshalling.FromEntityUnmarshaller[T]", "kind" : "implicit def"}, {"label" : "sprayJsonUnmarshallerConverter", "tail" : "(reader: RootJsonReader[T]): FromEntityUnmarshaller[T]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsonUnmarshallerConverter", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#sprayJsonUnmarshallerConverter[T](reader:spray.json.RootJsonReader[T]):akka.http.scaladsl.unmarshalling.FromEntityUnmarshaller[T]", "kind" : "implicit def"}, {"label" : "postHttpBindingFailure", "tail" : "(cause: Throwable): Unit", "member" : "akka.http.scaladsl.server.HttpApp.postHttpBindingFailure", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#postHttpBindingFailure(cause:Throwable):Unit", "kind" : "def"}, {"label" : "postHttpBinding", "tail" : "(binding: ServerBinding): Unit", "member" : "akka.http.scaladsl.server.HttpApp.postHttpBinding", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#postHttpBinding(binding:akka.http.scaladsl.Http.ServerBinding):Unit", "kind" : "def"}, {"label" : "binding", "tail" : "(): Try[ServerBinding]", "member" : "akka.http.scaladsl.server.HttpApp.binding", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#binding():scala.util.Try[akka.http.scaladsl.Http.ServerBinding]", "kind" : "def"}, {"label" : "startServer", "tail" : "(host: String, port: Int, settings: ServerSettings, system: Option[ActorSystem]): Unit", "member" : "akka.http.scaladsl.server.HttpApp.startServer", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#startServer(host:String,port:Int,settings:akka.http.scaladsl.settings.ServerSettings,system:Option[akka.actor.ActorSystem]):Unit", "kind" : "def"}, {"label" : "startServer", "tail" : "(host: String, port: Int, settings: ServerSettings, system: ActorSystem): Unit", "member" : "akka.http.scaladsl.server.HttpApp.startServer", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#startServer(host:String,port:Int,settings:akka.http.scaladsl.settings.ServerSettings,system:akka.actor.ActorSystem):Unit", "kind" : "def"}, {"label" : "startServer", "tail" : "(host: String, port: Int, settings: ServerSettings): Unit", "member" : "akka.http.scaladsl.server.HttpApp.startServer", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#startServer(host:String,port:Int,settings:akka.http.scaladsl.settings.ServerSettings):Unit", "kind" : "def"}, {"label" : "startServer", "tail" : "(host: String, port: Int, system: ActorSystem): Unit", "member" : "akka.http.scaladsl.server.HttpApp.startServer", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#startServer(host:String,port:Int,system:akka.actor.ActorSystem):Unit", "kind" : "def"}, {"label" : "startServer", "tail" : "(host: String, port: Int): Unit", "member" : "akka.http.scaladsl.server.HttpApp.startServer", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#startServer(host:String,port:Int):Unit", "kind" : "def"}, {"label" : "systemReference", "tail" : ": AtomicReference[ActorSystem]", "member" : "akka.http.scaladsl.server.HttpApp.systemReference", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#systemReference:java.util.concurrent.atomic.AtomicReference[akka.actor.ActorSystem]", "kind" : "val"}, {"label" : "asSourceOf", "tail" : "(support: EntityStreamingSupport)(um: FromByteStringUnmarshaller[T]): RequestToSourceUnmarshaller[T]", "member" : "akka.http.scaladsl.server.directives.FramedEntityStreamingDirectives.asSourceOf", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#asSourceOf[T](support:akka.http.scaladsl.common.EntityStreamingSupport)(implicitum:akka.http.scaladsl.unmarshalling.FromByteStringUnmarshaller[T]):FramedEntityStreamingDirectives.this.RequestToSourceUnmarshaller[T]", "kind" : "final def"}, {"label" : "asSourceOf", "tail" : "(um: FromByteStringUnmarshaller[T], support: EntityStreamingSupport): RequestToSourceUnmarshaller[T]", "member" : "akka.http.scaladsl.server.directives.FramedEntityStreamingDirectives.asSourceOf", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#asSourceOf[T](implicitum:akka.http.scaladsl.unmarshalling.FromByteStringUnmarshaller[T],implicitsupport:akka.http.scaladsl.common.EntityStreamingSupport):FramedEntityStreamingDirectives.this.RequestToSourceUnmarshaller[T]", "kind" : "final def"}, {"label" : "RequestToSourceUnmarshaller", "tail" : "", "member" : "akka.http.scaladsl.server.directives.FramedEntityStreamingDirectives.RequestToSourceUnmarshaller", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#RequestToSourceUnmarshaller[T<:<?>]=akka.http.scaladsl.unmarshalling.FromRequestUnmarshaller[akka.stream.scaladsl.Source[T,akka.NotUsed]]", "kind" : "type"}, {"label" : "handleWebSocketMessagesForOptionalProtocol", "tail" : "(handler: Flow[Message, Message, Any], subprotocol: Option[String]): Route", "member" : "akka.http.scaladsl.server.directives.WebSocketDirectives.handleWebSocketMessagesForOptionalProtocol", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#handleWebSocketMessagesForOptionalProtocol(handler:akka.stream.scaladsl.Flow[akka.http.scaladsl.model.ws.Message,akka.http.scaladsl.model.ws.Message,Any],subprotocol:Option[String]):akka.http.scaladsl.server.Route", "kind" : "def"}, {"label" : "handleWebSocketMessagesForProtocol", "tail" : "(handler: Flow[Message, Message, Any], subprotocol: String): Route", "member" : "akka.http.scaladsl.server.directives.WebSocketDirectives.handleWebSocketMessagesForProtocol", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#handleWebSocketMessagesForProtocol(handler:akka.stream.scaladsl.Flow[akka.http.scaladsl.model.ws.Message,akka.http.scaladsl.model.ws.Message,Any],subprotocol:String):akka.http.scaladsl.server.Route", "kind" : "def"}, {"label" : "handleWebSocketMessages", "tail" : "(handler: Flow[Message, Message, Any]): Route", "member" : "akka.http.scaladsl.server.directives.WebSocketDirectives.handleWebSocketMessages", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#handleWebSocketMessages(handler:akka.stream.scaladsl.Flow[akka.http.scaladsl.model.ws.Message,akka.http.scaladsl.model.ws.Message,Any]):akka.http.scaladsl.server.Route", "kind" : "def"}, {"label" : "extractOfferedWsProtocols", "tail" : "(): Directive1[Seq[String]]", "member" : "akka.http.scaladsl.server.directives.WebSocketDirectives.extractOfferedWsProtocols", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#extractOfferedWsProtocols:akka.http.scaladsl.server.Directive1[scala.collection.immutable.Seq[String]]", "kind" : "def"}, {"label" : "extractUpgradeToWebSocket", "tail" : "(): Directive1[UpgradeToWebSocket]", "member" : "akka.http.scaladsl.server.directives.WebSocketDirectives.extractUpgradeToWebSocket", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#extractUpgradeToWebSocket:akka.http.scaladsl.server.Directive1[akka.http.scaladsl.model.ws.UpgradeToWebSocket]", "kind" : "def"}, {"label" : "authorizeAsync", "tail" : "(check: (RequestContext) â‡’ Future[Boolean]): Directive0", "member" : "akka.http.scaladsl.server.directives.SecurityDirectives.authorizeAsync", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#authorizeAsync(check:akka.http.scaladsl.server.RequestContext=>scala.concurrent.Future[Boolean]):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "authorizeAsync", "tail" : "(check: â‡’ Future[Boolean]): Directive0", "member" : "akka.http.scaladsl.server.directives.SecurityDirectives.authorizeAsync", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#authorizeAsync(check:=>scala.concurrent.Future[Boolean]):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "authorize", "tail" : "(check: (RequestContext) â‡’ Boolean): Directive0", "member" : "akka.http.scaladsl.server.directives.SecurityDirectives.authorize", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#authorize(check:akka.http.scaladsl.server.RequestContext=>Boolean):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "authorize", "tail" : "(check: â‡’ Boolean): Directive0", "member" : "akka.http.scaladsl.server.directives.SecurityDirectives.authorize", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#authorize(check:=>Boolean):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "authenticateOrRejectWithChallenge", "tail" : "(authenticator: (Option[C]) â‡’ Future[AuthenticationResult[T]])(arg0: ClassTag[C]): AuthenticationDirective[T]", "member" : "akka.http.scaladsl.server.directives.SecurityDirectives.authenticateOrRejectWithChallenge", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#authenticateOrRejectWithChallenge[C<:akka.http.scaladsl.model.headers.HttpCredentials,T](authenticator:Option[C]=>scala.concurrent.Future[SecurityDirectives.this.AuthenticationResult[T]])(implicitevidence$1:scala.reflect.ClassTag[C]):akka.http.scaladsl.server.directives.AuthenticationDirective[T]", "kind" : "def"}, {"label" : "authenticateOrRejectWithChallenge", "tail" : "(authenticator: (Option[HttpCredentials]) â‡’ Future[AuthenticationResult[T]]): AuthenticationDirective[T]", "member" : "akka.http.scaladsl.server.directives.SecurityDirectives.authenticateOrRejectWithChallenge", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#authenticateOrRejectWithChallenge[T](authenticator:Option[akka.http.scaladsl.model.headers.HttpCredentials]=>scala.concurrent.Future[SecurityDirectives.this.AuthenticationResult[T]]):akka.http.scaladsl.server.directives.AuthenticationDirective[T]", "kind" : "def"}, {"label" : "authenticateOAuth2PFAsync", "tail" : "(realm: String, authenticator: AsyncAuthenticatorPF[T]): AuthenticationDirective[T]", "member" : "akka.http.scaladsl.server.directives.SecurityDirectives.authenticateOAuth2PFAsync", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#authenticateOAuth2PFAsync[T](realm:String,authenticator:SecurityDirectives.this.AsyncAuthenticatorPF[T]):akka.http.scaladsl.server.directives.AuthenticationDirective[T]", "kind" : "def"}, {"label" : "authenticateOAuth2PF", "tail" : "(realm: String, authenticator: AuthenticatorPF[T]): AuthenticationDirective[T]", "member" : "akka.http.scaladsl.server.directives.SecurityDirectives.authenticateOAuth2PF", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#authenticateOAuth2PF[T](realm:String,authenticator:SecurityDirectives.this.AuthenticatorPF[T]):akka.http.scaladsl.server.directives.AuthenticationDirective[T]", "kind" : "def"}, {"label" : "authenticateOAuth2Async", "tail" : "(realm: String, authenticator: AsyncAuthenticator[T]): AuthenticationDirective[T]", "member" : "akka.http.scaladsl.server.directives.SecurityDirectives.authenticateOAuth2Async", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#authenticateOAuth2Async[T](realm:String,authenticator:SecurityDirectives.this.AsyncAuthenticator[T]):akka.http.scaladsl.server.directives.AuthenticationDirective[T]", "kind" : "def"}, {"label" : "authenticateOAuth2", "tail" : "(realm: String, authenticator: Authenticator[T]): AuthenticationDirective[T]", "member" : "akka.http.scaladsl.server.directives.SecurityDirectives.authenticateOAuth2", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#authenticateOAuth2[T](realm:String,authenticator:SecurityDirectives.this.Authenticator[T]):akka.http.scaladsl.server.directives.AuthenticationDirective[T]", "kind" : "def"}, {"label" : "authenticateBasicPFAsync", "tail" : "(realm: String, authenticator: AsyncAuthenticatorPF[T]): AuthenticationDirective[T]", "member" : "akka.http.scaladsl.server.directives.SecurityDirectives.authenticateBasicPFAsync", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#authenticateBasicPFAsync[T](realm:String,authenticator:SecurityDirectives.this.AsyncAuthenticatorPF[T]):akka.http.scaladsl.server.directives.AuthenticationDirective[T]", "kind" : "def"}, {"label" : "authenticateBasicPF", "tail" : "(realm: String, authenticator: AuthenticatorPF[T]): AuthenticationDirective[T]", "member" : "akka.http.scaladsl.server.directives.SecurityDirectives.authenticateBasicPF", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#authenticateBasicPF[T](realm:String,authenticator:SecurityDirectives.this.AuthenticatorPF[T]):akka.http.scaladsl.server.directives.AuthenticationDirective[T]", "kind" : "def"}, {"label" : "authenticateBasicAsync", "tail" : "(realm: String, authenticator: AsyncAuthenticator[T]): AuthenticationDirective[T]", "member" : "akka.http.scaladsl.server.directives.SecurityDirectives.authenticateBasicAsync", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#authenticateBasicAsync[T](realm:String,authenticator:SecurityDirectives.this.AsyncAuthenticator[T]):akka.http.scaladsl.server.directives.AuthenticationDirective[T]", "kind" : "def"}, {"label" : "authenticateBasic", "tail" : "(realm: String, authenticator: Authenticator[T]): AuthenticationDirective[T]", "member" : "akka.http.scaladsl.server.directives.SecurityDirectives.authenticateBasic", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#authenticateBasic[T](realm:String,authenticator:SecurityDirectives.this.Authenticator[T]):akka.http.scaladsl.server.directives.AuthenticationDirective[T]", "kind" : "def"}, {"label" : "extractCredentials", "tail" : "(): Directive1[Option[HttpCredentials]]", "member" : "akka.http.scaladsl.server.directives.SecurityDirectives.extractCredentials", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#extractCredentials:akka.http.scaladsl.server.Directive1[Option[akka.http.scaladsl.model.headers.HttpCredentials]]", "kind" : "def"}, {"label" : "AsyncAuthenticatorPF", "tail" : "", "member" : "akka.http.scaladsl.server.directives.SecurityDirectives.AsyncAuthenticatorPF", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#AsyncAuthenticatorPF[T<:<?>]=PartialFunction[akka.http.scaladsl.server.directives.Credentials,scala.concurrent.Future[T]]", "kind" : "type"}, {"label" : "AuthenticatorPF", "tail" : "", "member" : "akka.http.scaladsl.server.directives.SecurityDirectives.AuthenticatorPF", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#AuthenticatorPF[T<:<?>]=PartialFunction[akka.http.scaladsl.server.directives.Credentials,T]", "kind" : "type"}, {"label" : "AsyncAuthenticator", "tail" : "", "member" : "akka.http.scaladsl.server.directives.SecurityDirectives.AsyncAuthenticator", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#AsyncAuthenticator[T<:<?>]=akka.http.scaladsl.server.directives.Credentials=>scala.concurrent.Future[Option[T]]", "kind" : "type"}, {"label" : "Authenticator", "tail" : "", "member" : "akka.http.scaladsl.server.directives.SecurityDirectives.Authenticator", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#Authenticator[T<:<?>]=akka.http.scaladsl.server.directives.Credentials=>Option[T]", "kind" : "type"}, {"label" : "AuthenticationResult", "tail" : "", "member" : "akka.http.scaladsl.server.directives.SecurityDirectives.AuthenticationResult", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#AuthenticationResult[+T<:<?>]=Either[akka.http.scaladsl.model.headers.HttpChallenge,T]", "kind" : "type"}, {"label" : "scheme", "tail" : "(name: String): Directive0", "member" : "akka.http.scaladsl.server.directives.SchemeDirectives.scheme", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#scheme(name:String):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "extractScheme", "tail" : "(): Directive1[String]", "member" : "akka.http.scaladsl.server.directives.SchemeDirectives.extractScheme", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#extractScheme:akka.http.scaladsl.server.Directive1[String]", "kind" : "def"}, {"label" : "failWith", "tail" : "(error: Throwable): StandardRoute", "member" : "akka.http.scaladsl.server.directives.RouteDirectives.failWith", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#failWith(error:Throwable):akka.http.scaladsl.server.StandardRoute", "kind" : "def"}, {"label" : "complete", "tail" : "(m: â‡’ ToResponseMarshallable): StandardRoute", "member" : "akka.http.scaladsl.server.directives.RouteDirectives.complete", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#complete(m:=>akka.http.scaladsl.marshalling.ToResponseMarshallable):akka.http.scaladsl.server.StandardRoute", "kind" : "def"}, {"label" : "redirect", "tail" : "(uri: Uri, redirectionType: Redirection): StandardRoute", "member" : "akka.http.scaladsl.server.directives.RouteDirectives.redirect", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#redirect(uri:akka.http.scaladsl.model.Uri,redirectionType:akka.http.scaladsl.model.StatusCodes.Redirection):akka.http.scaladsl.server.StandardRoute", "kind" : "def"}, {"label" : "reject", "tail" : "(rejections: Rejection*): StandardRoute", "member" : "akka.http.scaladsl.server.directives.RouteDirectives.reject", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#reject(rejections:akka.http.scaladsl.server.Rejection*):akka.http.scaladsl.server.StandardRoute", "kind" : "def"}, {"label" : "reject", "tail" : "(): StandardRoute", "member" : "akka.http.scaladsl.server.directives.RouteDirectives.reject", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#reject:akka.http.scaladsl.server.StandardRoute", "kind" : "def"}, {"label" : "respondWithDefaultHeaders", "tail" : "(responseHeaders: Seq[HttpHeader]): Directive0", "member" : "akka.http.scaladsl.server.directives.RespondWithDirectives.respondWithDefaultHeaders", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#respondWithDefaultHeaders(responseHeaders:scala.collection.immutable.Seq[akka.http.scaladsl.model.HttpHeader]):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "respondWithDefaultHeaders", "tail" : "(responseHeaders: HttpHeader*): Directive0", "member" : "akka.http.scaladsl.server.directives.RespondWithDirectives.respondWithDefaultHeaders", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#respondWithDefaultHeaders(responseHeaders:akka.http.scaladsl.model.HttpHeader*):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "respondWithHeaders", "tail" : "(responseHeaders: Seq[HttpHeader]): Directive0", "member" : "akka.http.scaladsl.server.directives.RespondWithDirectives.respondWithHeaders", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#respondWithHeaders(responseHeaders:scala.collection.immutable.Seq[akka.http.scaladsl.model.HttpHeader]):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "respondWithHeaders", "tail" : "(responseHeaders: HttpHeader*): Directive0", "member" : "akka.http.scaladsl.server.directives.RespondWithDirectives.respondWithHeaders", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#respondWithHeaders(responseHeaders:akka.http.scaladsl.model.HttpHeader*):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "respondWithDefaultHeader", "tail" : "(responseHeader: HttpHeader): Directive0", "member" : "akka.http.scaladsl.server.directives.RespondWithDirectives.respondWithDefaultHeader", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#respondWithDefaultHeader(responseHeader:akka.http.scaladsl.model.HttpHeader):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "respondWithHeader", "tail" : "(responseHeader: HttpHeader): Directive0", "member" : "akka.http.scaladsl.server.directives.RespondWithDirectives.respondWithHeader", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#respondWithHeader(responseHeader:akka.http.scaladsl.model.HttpHeader):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "withRangeSupport", "tail" : "(): Directive0", "member" : "akka.http.scaladsl.server.directives.RangeDirectives.withRangeSupport", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#withRangeSupport:akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "ignoreTrailingSlash", "tail" : "(): Directive0", "member" : "akka.http.scaladsl.server.directives.PathDirectives.ignoreTrailingSlash", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#ignoreTrailingSlash:akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "redirectToNoTrailingSlashIfPresent", "tail" : "(redirectionType: Redirection): Directive0", "member" : "akka.http.scaladsl.server.directives.PathDirectives.redirectToNoTrailingSlashIfPresent", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#redirectToNoTrailingSlashIfPresent(redirectionType:akka.http.scaladsl.model.StatusCodes.Redirection):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "redirectToTrailingSlashIfMissing", "tail" : "(redirectionType: Redirection): Directive0", "member" : "akka.http.scaladsl.server.directives.PathDirectives.redirectToTrailingSlashIfMissing", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#redirectToTrailingSlashIfMissing(redirectionType:akka.http.scaladsl.model.StatusCodes.Redirection):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "pathSingleSlash", "tail" : "(): Directive0", "member" : "akka.http.scaladsl.server.directives.PathDirectives.pathSingleSlash", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#pathSingleSlash:akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "pathEndOrSingleSlash", "tail" : "(): Directive0", "member" : "akka.http.scaladsl.server.directives.PathDirectives.pathEndOrSingleSlash", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#pathEndOrSingleSlash:akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "pathEnd", "tail" : "(): Directive0", "member" : "akka.http.scaladsl.server.directives.PathDirectives.pathEnd", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#pathEnd:akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "pathSuffixTest", "tail" : "(pm: PathMatcher[L]): Directive[L]", "member" : "akka.http.scaladsl.server.directives.PathDirectives.pathSuffixTest", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#pathSuffixTest[L](pm:akka.http.scaladsl.server.PathMatcher[L]):akka.http.scaladsl.server.Directive[L]", "kind" : "def"}, {"label" : "pathSuffix", "tail" : "(pm: PathMatcher[L]): Directive[L]", "member" : "akka.http.scaladsl.server.directives.PathDirectives.pathSuffix", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#pathSuffix[L](pm:akka.http.scaladsl.server.PathMatcher[L]):akka.http.scaladsl.server.Directive[L]", "kind" : "def"}, {"label" : "rawPathPrefixTest", "tail" : "(pm: PathMatcher[L]): Directive[L]", "member" : "akka.http.scaladsl.server.directives.PathDirectives.rawPathPrefixTest", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#rawPathPrefixTest[L](pm:akka.http.scaladsl.server.PathMatcher[L]):akka.http.scaladsl.server.Directive[L]", "kind" : "def"}, {"label" : "pathPrefixTest", "tail" : "(pm: PathMatcher[L]): Directive[L]", "member" : "akka.http.scaladsl.server.directives.PathDirectives.pathPrefixTest", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#pathPrefixTest[L](pm:akka.http.scaladsl.server.PathMatcher[L]):akka.http.scaladsl.server.Directive[L]", "kind" : "def"}, {"label" : "rawPathPrefix", "tail" : "(pm: PathMatcher[L]): Directive[L]", "member" : "akka.http.scaladsl.server.directives.PathDirectives.rawPathPrefix", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#rawPathPrefix[L](pm:akka.http.scaladsl.server.PathMatcher[L]):akka.http.scaladsl.server.Directive[L]", "kind" : "def"}, {"label" : "pathPrefix", "tail" : "(pm: PathMatcher[L]): Directive[L]", "member" : "akka.http.scaladsl.server.directives.PathDirectives.pathPrefix", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#pathPrefix[L](pm:akka.http.scaladsl.server.PathMatcher[L]):akka.http.scaladsl.server.Directive[L]", "kind" : "def"}, {"label" : "path", "tail" : "(pm: PathMatcher[L]): Directive[L]", "member" : "akka.http.scaladsl.server.directives.PathDirectives.path", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#path[L](pm:akka.http.scaladsl.server.PathMatcher[L]):akka.http.scaladsl.server.Directive[L]", "kind" : "def"}, {"label" : "_valueMap2PathMatcher", "tail" : "(valueMap: Map[String, T]): PathMatcher1[T]", "member" : "akka.http.scaladsl.server.ImplicitPathMatcherConstruction._valueMap2PathMatcher", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#_valueMap2PathMatcher[T](valueMap:Map[String,T]):akka.http.scaladsl.server.PathMatcher1[T]", "kind" : "implicit def"}, {"label" : "_regex2PathMatcher", "tail" : "(regex: Regex): PathMatcher1[String]", "member" : "akka.http.scaladsl.server.ImplicitPathMatcherConstruction._regex2PathMatcher", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#_regex2PathMatcher(regex:scala.util.matching.Regex):akka.http.scaladsl.server.PathMatcher1[String]", "kind" : "implicit def"}, {"label" : "_stringNameOptionReceptacle2PathMatcher", "tail" : "(nr: NameOptionReceptacle[String]): PathMatcher0", "member" : "akka.http.scaladsl.server.ImplicitPathMatcherConstruction._stringNameOptionReceptacle2PathMatcher", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#_stringNameOptionReceptacle2PathMatcher(nr:akka.http.scaladsl.common.NameOptionReceptacle[String]):akka.http.scaladsl.server.PathMatcher0", "kind" : "implicit def"}, {"label" : "_segmentStringToPathMatcher", "tail" : "(segment: String): PathMatcher0", "member" : "akka.http.scaladsl.server.ImplicitPathMatcherConstruction._segmentStringToPathMatcher", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#_segmentStringToPathMatcher(segment:String):akka.http.scaladsl.server.PathMatcher0", "kind" : "implicit def"}, {"label" : "_stringExtractionPair2PathMatcher", "tail" : "(tuple: (String, T)): PathMatcher1[T]", "member" : "akka.http.scaladsl.server.ImplicitPathMatcherConstruction._stringExtractionPair2PathMatcher", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#_stringExtractionPair2PathMatcher[T](tuple:(String,T)):akka.http.scaladsl.server.PathMatcher1[T]", "kind" : "implicit def"}, {"label" : "nothingMatcher", "tail" : "(arg0: Tuple[L]): PathMatcher[L]", "member" : "akka.http.scaladsl.server.PathMatchers.nothingMatcher", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#nothingMatcher[L](implicitevidence$18:akka.http.scaladsl.server.util.Tuple[L]):akka.http.scaladsl.server.PathMatcher[L]", "kind" : "def"}, {"label" : "Segments", "tail" : "(min: Int, max: Int): PathMatcher1[List[String]]", "member" : "akka.http.scaladsl.server.PathMatchers.Segments", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#Segments(min:Int,max:Int):akka.http.scaladsl.server.PathMatcher1[List[String]]", "kind" : "def"}, {"label" : "Segments", "tail" : "(count: Int): PathMatcher1[List[String]]", "member" : "akka.http.scaladsl.server.PathMatchers.Segments", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#Segments(count:Int):akka.http.scaladsl.server.PathMatcher1[List[String]]", "kind" : "def"}, {"label" : "Segments", "tail" : ": PathMatcher1[List[String]]", "member" : "akka.http.scaladsl.server.PathMatchers.Segments", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#Segments:akka.http.scaladsl.server.PathMatcher1[List[String]]", "kind" : "val"}, {"label" : "Neutral", "tail" : ": PathMatcher0", "member" : "akka.http.scaladsl.server.PathMatchers.Neutral", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#Neutral:akka.http.scaladsl.server.PathMatcher0", "kind" : "val"}, {"label" : "JavaUUID", "tail" : ": PathMatcher1[UUID]", "member" : "akka.http.scaladsl.server.PathMatchers.JavaUUID", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#JavaUUID:akka.http.scaladsl.server.PathMatcher1[java.util.UUID]", "kind" : "val"}, {"label" : "DoubleNumber", "tail" : ": PathMatcher1[Double]", "member" : "akka.http.scaladsl.server.PathMatchers.DoubleNumber", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#DoubleNumber:akka.http.scaladsl.server.PathMatcher1[Double]", "kind" : "val"}, {"label" : "separateOnSlashes", "tail" : "(string: String): PathMatcher0", "member" : "akka.http.scaladsl.server.PathMatchers.separateOnSlashes", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#separateOnSlashes(string:String):akka.http.scaladsl.server.PathMatcher0", "kind" : "def"}, {"label" : "withRequestTimeoutResponse", "tail" : "(handler: (HttpRequest) â‡’ HttpResponse): Directive0", "member" : "akka.http.scaladsl.server.directives.TimeoutDirectives.withRequestTimeoutResponse", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#withRequestTimeoutResponse(handler:akka.http.scaladsl.model.HttpRequest=>akka.http.scaladsl.model.HttpResponse):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "withRequestTimeout", "tail" : "(timeout: Duration, handler: Option[(HttpRequest) â‡’ HttpResponse]): Directive0", "member" : "akka.http.scaladsl.server.directives.TimeoutDirectives.withRequestTimeout", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#withRequestTimeout(timeout:scala.concurrent.duration.Duration,handler:Option[akka.http.scaladsl.model.HttpRequest=>akka.http.scaladsl.model.HttpResponse]):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "withRequestTimeout", "tail" : "(timeout: Duration, handler: (HttpRequest) â‡’ HttpResponse): Directive0", "member" : "akka.http.scaladsl.server.directives.TimeoutDirectives.withRequestTimeout", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#withRequestTimeout(timeout:scala.concurrent.duration.Duration,handler:akka.http.scaladsl.model.HttpRequest=>akka.http.scaladsl.model.HttpResponse):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "withRequestTimeout", "tail" : "(timeout: Duration): Directive0", "member" : "akka.http.scaladsl.server.directives.TimeoutDirectives.withRequestTimeout", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#withRequestTimeout(timeout:scala.concurrent.duration.Duration):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "withoutRequestTimeout", "tail" : "(): Directive0", "member" : "akka.http.scaladsl.server.directives.TimeoutDirectives.withoutRequestTimeout", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#withoutRequestTimeout:akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "extractRequestTimeout", "tail" : "(): Directive1[Duration]", "member" : "akka.http.scaladsl.server.directives.TimeoutDirectives.extractRequestTimeout", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#extractRequestTimeout:akka.http.scaladsl.server.Directive1[scala.concurrent.duration.Duration]", "kind" : "def"}, {"label" : "parameters", "tail" : "(pdm: ParamMagnet): Out", "member" : "akka.http.scaladsl.server.directives.ParameterDirectives.parameters", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#parameters(pdm:akka.http.scaladsl.server.directives.ParameterDirectives.ParamMagnet):pdm.Out", "kind" : "def"}, {"label" : "parameter", "tail" : "(pdm: ParamMagnet): Out", "member" : "akka.http.scaladsl.server.directives.ParameterDirectives.parameter", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#parameter(pdm:akka.http.scaladsl.server.directives.ParameterDirectives.ParamMagnet):pdm.Out", "kind" : "def"}, {"label" : "parameterSeq", "tail" : "(): Directive1[Seq[(String, String)]]", "member" : "akka.http.scaladsl.server.directives.ParameterDirectives.parameterSeq", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#parameterSeq:akka.http.scaladsl.server.Directive1[scala.collection.immutable.Seq[(String,String)]]", "kind" : "def"}, {"label" : "parameterMultiMap", "tail" : "(): Directive1[Map[String, List[String]]]", "member" : "akka.http.scaladsl.server.directives.ParameterDirectives.parameterMultiMap", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#parameterMultiMap:akka.http.scaladsl.server.Directive1[Map[String,List[String]]]", "kind" : "def"}, {"label" : "parameterMap", "tail" : "(): Directive1[Map[String, String]]", "member" : "akka.http.scaladsl.server.directives.ParameterDirectives.parameterMap", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#parameterMap:akka.http.scaladsl.server.Directive1[Map[String,String]]", "kind" : "def"}, {"label" : "withoutSizeLimit", "tail" : "(): Directive0", "member" : "akka.http.scaladsl.server.directives.MiscDirectives.withoutSizeLimit", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#withoutSizeLimit:akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "withSizeLimit", "tail" : "(maxBytes: Long): Directive0", "member" : "akka.http.scaladsl.server.directives.MiscDirectives.withSizeLimit", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#withSizeLimit(maxBytes:Long):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "selectPreferredLanguage", "tail" : "(first: Language, more: Language*): Directive1[Language]", "member" : "akka.http.scaladsl.server.directives.MiscDirectives.selectPreferredLanguage", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#selectPreferredLanguage(first:akka.http.scaladsl.model.headers.Language,more:akka.http.scaladsl.model.headers.Language*):akka.http.scaladsl.server.Directive1[akka.http.scaladsl.model.headers.Language]", "kind" : "def"}, {"label" : "rejectEmptyResponse", "tail" : "(): Directive0", "member" : "akka.http.scaladsl.server.directives.MiscDirectives.rejectEmptyResponse", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#rejectEmptyResponse:akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "requestEntityPresent", "tail" : "(): Directive0", "member" : "akka.http.scaladsl.server.directives.MiscDirectives.requestEntityPresent", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#requestEntityPresent:akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "requestEntityEmpty", "tail" : "(): Directive0", "member" : "akka.http.scaladsl.server.directives.MiscDirectives.requestEntityEmpty", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#requestEntityEmpty:akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "extractClientIP", "tail" : "(): Directive1[RemoteAddress]", "member" : "akka.http.scaladsl.server.directives.MiscDirectives.extractClientIP", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#extractClientIP:akka.http.scaladsl.server.Directive1[akka.http.scaladsl.model.RemoteAddress]", "kind" : "def"}, {"label" : "validate", "tail" : "(check: â‡’ Boolean, errorMsg: String): Directive0", "member" : "akka.http.scaladsl.server.directives.MiscDirectives.validate", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#validate(check:=>Boolean,errorMsg:String):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "overrideMethodWithParameter", "tail" : "(paramName: String): Directive0", "member" : "akka.http.scaladsl.server.directives.MethodDirectives.overrideMethodWithParameter", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#overrideMethodWithParameter(paramName:String):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "method", "tail" : "(httpMethod: HttpMethod): Directive0", "member" : "akka.http.scaladsl.server.directives.MethodDirectives.method", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#method(httpMethod:akka.http.scaladsl.model.HttpMethod):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "extractMethod", "tail" : "(): Directive1[HttpMethod]", "member" : "akka.http.scaladsl.server.directives.MethodDirectives.extractMethod", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#extractMethod:akka.http.scaladsl.server.Directive1[akka.http.scaladsl.model.HttpMethod]", "kind" : "def"}, {"label" : "put", "tail" : "(): Directive0", "member" : "akka.http.scaladsl.server.directives.MethodDirectives.put", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#put:akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "post", "tail" : "(): Directive0", "member" : "akka.http.scaladsl.server.directives.MethodDirectives.post", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#post:akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "patch", "tail" : "(): Directive0", "member" : "akka.http.scaladsl.server.directives.MethodDirectives.patch", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#patch:akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "options", "tail" : "(): Directive0", "member" : "akka.http.scaladsl.server.directives.MethodDirectives.options", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#options:akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "head", "tail" : "(): Directive0", "member" : "akka.http.scaladsl.server.directives.MethodDirectives.head", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#head:akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "get", "tail" : "(): Directive0", "member" : "akka.http.scaladsl.server.directives.MethodDirectives.get", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#get:akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "delete", "tail" : "(): Directive0", "member" : "akka.http.scaladsl.server.directives.MethodDirectives.delete", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#delete:akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "handleWith", "tail" : "(f: (A) â‡’ B)(um: FromRequestUnmarshaller[A], m: ToResponseMarshaller[B]): Route", "member" : "akka.http.scaladsl.server.directives.MarshallingDirectives.handleWith", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#handleWith[A,B](f:A=>B)(implicitum:akka.http.scaladsl.unmarshalling.FromRequestUnmarshaller[A],implicitm:akka.http.scaladsl.marshalling.ToResponseMarshaller[B]):akka.http.scaladsl.server.Route", "kind" : "def"}, {"label" : "instanceOf", "tail" : "(m: ToResponseMarshaller[T]): ToResponseMarshaller[T]", "member" : "akka.http.scaladsl.server.directives.MarshallingDirectives.instanceOf", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#instanceOf[T](implicitm:akka.http.scaladsl.marshalling.ToResponseMarshaller[T]):akka.http.scaladsl.marshalling.ToResponseMarshaller[T]", "kind" : "def"}, {"label" : "completeWith", "tail" : "(marshaller: ToResponseMarshaller[T])(inner: ((T) â‡’ Unit) â‡’ Unit): Route", "member" : "akka.http.scaladsl.server.directives.MarshallingDirectives.completeWith", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#completeWith[T](marshaller:akka.http.scaladsl.marshalling.ToResponseMarshaller[T])(inner:(T=>Unit)=>Unit):akka.http.scaladsl.server.Route", "kind" : "def"}, {"label" : "as", "tail" : "(um: FromRequestUnmarshaller[T]): FromRequestUnmarshaller[T]", "member" : "akka.http.scaladsl.server.directives.MarshallingDirectives.as", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#as[T](implicitum:akka.http.scaladsl.unmarshalling.FromRequestUnmarshaller[T]):akka.http.scaladsl.unmarshalling.FromRequestUnmarshaller[T]", "kind" : "def"}, {"label" : "entity", "tail" : "(um: FromRequestUnmarshaller[T]): Directive1[T]", "member" : "akka.http.scaladsl.server.directives.MarshallingDirectives.entity", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#entity[T](um:akka.http.scaladsl.unmarshalling.FromRequestUnmarshaller[T]):akka.http.scaladsl.server.Directive1[T]", "kind" : "def"}, {"label" : "host", "tail" : "(regex: Regex): Directive1[String]", "member" : "akka.http.scaladsl.server.directives.HostDirectives.host", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#host(regex:scala.util.matching.Regex):akka.http.scaladsl.server.Directive1[String]", "kind" : "def"}, {"label" : "host", "tail" : "(predicate: (String) â‡’ Boolean): Directive0", "member" : "akka.http.scaladsl.server.directives.HostDirectives.host", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#host(predicate:String=>Boolean):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "host", "tail" : "(hostNames: String*): Directive0", "member" : "akka.http.scaladsl.server.directives.HostDirectives.host", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#host(hostNames:String*):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "extractHost", "tail" : "(): Directive1[String]", "member" : "akka.http.scaladsl.server.directives.HostDirectives.extractHost", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#extractHost:akka.http.scaladsl.server.Directive1[String]", "kind" : "def"}, {"label" : "optionalHeaderValueByType", "tail" : "(magnet: HeaderMagnet[T]): Directive1[Option[T]]", "member" : "akka.http.scaladsl.server.directives.HeaderDirectives.optionalHeaderValueByType", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#optionalHeaderValueByType[T<:akka.http.scaladsl.model.HttpHeader](magnet:akka.http.scaladsl.server.directives.HeaderMagnet[T]):akka.http.scaladsl.server.Directive1[Option[T]]", "kind" : "def"}, {"label" : "optionalHeaderValueByName", "tail" : "(headerName: String): Directive1[Option[String]]", "member" : "akka.http.scaladsl.server.directives.HeaderDirectives.optionalHeaderValueByName", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#optionalHeaderValueByName(headerName:String):akka.http.scaladsl.server.Directive1[Option[String]]", "kind" : "def"}, {"label" : "optionalHeaderValueByName", "tail" : "(headerName: Symbol): Directive1[Option[String]]", "member" : "akka.http.scaladsl.server.directives.HeaderDirectives.optionalHeaderValueByName", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#optionalHeaderValueByName(headerName:Symbol):akka.http.scaladsl.server.Directive1[Option[String]]", "kind" : "def"}, {"label" : "optionalHeaderValuePF", "tail" : "(pf: PartialFunction[HttpHeader, T]): Directive1[Option[T]]", "member" : "akka.http.scaladsl.server.directives.HeaderDirectives.optionalHeaderValuePF", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#optionalHeaderValuePF[T](pf:PartialFunction[akka.http.scaladsl.model.HttpHeader,T]):akka.http.scaladsl.server.Directive1[Option[T]]", "kind" : "def"}, {"label" : "optionalHeaderValue", "tail" : "(f: (HttpHeader) â‡’ Option[T]): Directive1[Option[T]]", "member" : "akka.http.scaladsl.server.directives.HeaderDirectives.optionalHeaderValue", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#optionalHeaderValue[T](f:akka.http.scaladsl.model.HttpHeader=>Option[T]):akka.http.scaladsl.server.Directive1[Option[T]]", "kind" : "def"}, {"label" : "headerValueByType", "tail" : "(magnet: HeaderMagnet[T]): Directive1[T]", "member" : "akka.http.scaladsl.server.directives.HeaderDirectives.headerValueByType", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#headerValueByType[T](magnet:akka.http.scaladsl.server.directives.HeaderMagnet[T]):akka.http.scaladsl.server.Directive1[T]", "kind" : "def"}, {"label" : "headerValueByName", "tail" : "(headerName: String): Directive1[String]", "member" : "akka.http.scaladsl.server.directives.HeaderDirectives.headerValueByName", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#headerValueByName(headerName:String):akka.http.scaladsl.server.Directive1[String]", "kind" : "def"}, {"label" : "headerValueByName", "tail" : "(headerName: Symbol): Directive1[String]", "member" : "akka.http.scaladsl.server.directives.HeaderDirectives.headerValueByName", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#headerValueByName(headerName:Symbol):akka.http.scaladsl.server.Directive1[String]", "kind" : "def"}, {"label" : "headerValuePF", "tail" : "(pf: PartialFunction[HttpHeader, T]): Directive1[T]", "member" : "akka.http.scaladsl.server.directives.HeaderDirectives.headerValuePF", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#headerValuePF[T](pf:PartialFunction[akka.http.scaladsl.model.HttpHeader,T]):akka.http.scaladsl.server.Directive1[T]", "kind" : "def"}, {"label" : "headerValue", "tail" : "(f: (HttpHeader) â‡’ Option[T]): Directive1[T]", "member" : "akka.http.scaladsl.server.directives.HeaderDirectives.headerValue", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#headerValue[T](f:akka.http.scaladsl.model.HttpHeader=>Option[T]):akka.http.scaladsl.server.Directive1[T]", "kind" : "def"}, {"label" : "checkSameOrigin", "tail" : "(allowed: Default): Directive0", "member" : "akka.http.scaladsl.server.directives.HeaderDirectives.checkSameOrigin", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#checkSameOrigin(allowed:akka.http.scaladsl.model.headers.HttpOriginRange.Default):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "completeOrRecoverWith", "tail" : "(magnet: CompleteOrRecoverWithMagnet): Directive1[Throwable]", "member" : "akka.http.scaladsl.server.directives.FutureDirectives.completeOrRecoverWith", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#completeOrRecoverWith(magnet:akka.http.scaladsl.server.directives.CompleteOrRecoverWithMagnet):akka.http.scaladsl.server.Directive1[Throwable]", "kind" : "def"}, {"label" : "onSuccess", "tail" : "(magnet: OnSuccessMagnet): Directive[Out]", "member" : "akka.http.scaladsl.server.directives.FutureDirectives.onSuccess", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#onSuccess(magnet:akka.http.scaladsl.server.directives.OnSuccessMagnet):akka.http.scaladsl.server.Directive[magnet.Out]", "kind" : "def"}, {"label" : "onCompleteWithBreaker", "tail" : "(breaker: CircuitBreaker)(future: â‡’ Future[T]): Directive1[Try[T]]", "member" : "akka.http.scaladsl.server.directives.FutureDirectives.onCompleteWithBreaker", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#onCompleteWithBreaker[T](breaker:akka.pattern.CircuitBreaker)(future:=>scala.concurrent.Future[T]):akka.http.scaladsl.server.Directive1[scala.util.Try[T]]", "kind" : "def"}, {"label" : "onComplete", "tail" : "(future: â‡’ Future[T]): Directive1[Try[T]]", "member" : "akka.http.scaladsl.server.directives.FutureDirectives.onComplete", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#onComplete[T](future:=>scala.concurrent.Future[T]):akka.http.scaladsl.server.Directive1[scala.util.Try[T]]", "kind" : "def"}, {"label" : "formFields", "tail" : "(pdm: FieldMagnet): Out", "member" : "akka.http.scaladsl.server.directives.FormFieldDirectives.formFields", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#formFields(pdm:akka.http.scaladsl.server.directives.FormFieldDirectives.FieldMagnet):pdm.Out", "kind" : "def"}, {"label" : "formField", "tail" : "(pdm: FieldMagnet): Out", "member" : "akka.http.scaladsl.server.directives.FormFieldDirectives.formField", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#formField(pdm:akka.http.scaladsl.server.directives.FormFieldDirectives.FieldMagnet):pdm.Out", "kind" : "def"}, {"label" : "formFieldSeq", "tail" : "(): Directive1[Seq[(String, String)]]", "member" : "akka.http.scaladsl.server.directives.FormFieldDirectives.formFieldSeq", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#formFieldSeq:akka.http.scaladsl.server.Directive1[scala.collection.immutable.Seq[(String,String)]]", "kind" : "def"}, {"label" : "formFieldMultiMap", "tail" : "(): Directive1[Map[String, List[String]]]", "member" : "akka.http.scaladsl.server.directives.FormFieldDirectives.formFieldMultiMap", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#formFieldMultiMap:akka.http.scaladsl.server.Directive1[Map[String,List[String]]]", "kind" : "def"}, {"label" : "formFieldMap", "tail" : "(): Directive1[Map[String, String]]", "member" : "akka.http.scaladsl.server.directives.FormFieldDirectives.formFieldMap", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#formFieldMap:akka.http.scaladsl.server.Directive1[Map[String,String]]", "kind" : "def"}, {"label" : "_string2NR", "tail" : "(string: String): NameReceptacle[String]", "member" : "akka.http.scaladsl.common.ToNameReceptacleEnhancements._string2NR", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#_string2NR(string:String):akka.http.scaladsl.common.NameReceptacle[String]", "kind" : "implicit def"}, {"label" : "_symbol2NR", "tail" : "(symbol: Symbol): NameReceptacle[String]", "member" : "akka.http.scaladsl.common.ToNameReceptacleEnhancements._symbol2NR", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#_symbol2NR(symbol:Symbol):akka.http.scaladsl.common.NameReceptacle[String]", "kind" : "implicit def"}, {"label" : "fileUploadAll", "tail" : "(fieldName: String): Directive1[Seq[(FileInfo, Source[ByteString, Any])]]", "member" : "akka.http.scaladsl.server.directives.FileUploadDirectives.fileUploadAll", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#fileUploadAll(fieldName:String):akka.http.scaladsl.server.Directive1[scala.collection.immutable.Seq[(akka.http.scaladsl.server.directives.FileInfo,akka.stream.scaladsl.Source[akka.util.ByteString,Any])]]", "kind" : "def"}, {"label" : "fileUpload", "tail" : "(fieldName: String): Directive1[(FileInfo, Source[ByteString, Any])]", "member" : "akka.http.scaladsl.server.directives.FileUploadDirectives.fileUpload", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#fileUpload(fieldName:String):akka.http.scaladsl.server.Directive1[(akka.http.scaladsl.server.directives.FileInfo,akka.stream.scaladsl.Source[akka.util.ByteString,Any])]", "kind" : "def"}, {"label" : "storeUploadedFiles", "tail" : "(fieldName: String, destFn: (FileInfo) â‡’ File): Directive1[Seq[(FileInfo, File)]]", "member" : "akka.http.scaladsl.server.directives.FileUploadDirectives.storeUploadedFiles", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#storeUploadedFiles(fieldName:String,destFn:akka.http.scaladsl.server.directives.FileInfo=>java.io.File):akka.http.scaladsl.server.Directive1[scala.collection.immutable.Seq[(akka.http.scaladsl.server.directives.FileInfo,java.io.File)]]", "kind" : "def"}, {"label" : "storeUploadedFile", "tail" : "(fieldName: String, destFn: (FileInfo) â‡’ File): Directive[(FileInfo, File)]", "member" : "akka.http.scaladsl.server.directives.FileUploadDirectives.storeUploadedFile", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#storeUploadedFile(fieldName:String,destFn:akka.http.scaladsl.server.directives.FileInfo=>java.io.File):akka.http.scaladsl.server.Directive[(akka.http.scaladsl.server.directives.FileInfo,java.io.File)]", "kind" : "def"}, {"label" : "uploadedFile", "tail" : "(fieldName: String): Directive1[(FileInfo, File)]", "member" : "akka.http.scaladsl.server.directives.FileUploadDirectives.uploadedFile", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#uploadedFile(fieldName:String):akka.http.scaladsl.server.Directive1[(akka.http.scaladsl.server.directives.FileInfo,java.io.File)]", "kind" : "def"}, {"label" : "_defaultClassLoader", "tail" : "(): ClassLoader", "member" : "akka.http.scaladsl.server.directives.FileAndResourceDirectives._defaultClassLoader", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#_defaultClassLoader:ClassLoader", "kind" : "def"}, {"label" : "getFromResourceDirectory", "tail" : "(directoryName: String, classLoader: ClassLoader)(resolver: ContentTypeResolver): Route", "member" : "akka.http.scaladsl.server.directives.FileAndResourceDirectives.getFromResourceDirectory", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#getFromResourceDirectory(directoryName:String,classLoader:ClassLoader)(implicitresolver:akka.http.scaladsl.server.directives.ContentTypeResolver):akka.http.scaladsl.server.Route", "kind" : "def"}, {"label" : "getFromBrowseableDirectories", "tail" : "(directories: String*)(renderer: DirectoryRenderer, resolver: ContentTypeResolver): Route", "member" : "akka.http.scaladsl.server.directives.FileAndResourceDirectives.getFromBrowseableDirectories", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#getFromBrowseableDirectories(directories:String*)(implicitrenderer:akka.http.scaladsl.server.directives.FileAndResourceDirectives.DirectoryRenderer,implicitresolver:akka.http.scaladsl.server.directives.ContentTypeResolver):akka.http.scaladsl.server.Route", "kind" : "def"}, {"label" : "getFromBrowseableDirectory", "tail" : "(directory: String)(renderer: DirectoryRenderer, resolver: ContentTypeResolver): Route", "member" : "akka.http.scaladsl.server.directives.FileAndResourceDirectives.getFromBrowseableDirectory", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#getFromBrowseableDirectory(directory:String)(implicitrenderer:akka.http.scaladsl.server.directives.FileAndResourceDirectives.DirectoryRenderer,implicitresolver:akka.http.scaladsl.server.directives.ContentTypeResolver):akka.http.scaladsl.server.Route", "kind" : "def"}, {"label" : "listDirectoryContents", "tail" : "(directories: String*)(renderer: DirectoryRenderer): Route", "member" : "akka.http.scaladsl.server.directives.FileAndResourceDirectives.listDirectoryContents", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#listDirectoryContents(directories:String*)(implicitrenderer:akka.http.scaladsl.server.directives.FileAndResourceDirectives.DirectoryRenderer):akka.http.scaladsl.server.Route", "kind" : "def"}, {"label" : "getFromDirectory", "tail" : "(directoryName: String)(resolver: ContentTypeResolver): Route", "member" : "akka.http.scaladsl.server.directives.FileAndResourceDirectives.getFromDirectory", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#getFromDirectory(directoryName:String)(implicitresolver:akka.http.scaladsl.server.directives.ContentTypeResolver):akka.http.scaladsl.server.Route", "kind" : "def"}, {"label" : "getFromResource", "tail" : "(resourceName: String, contentType: ContentType, classLoader: ClassLoader): Route", "member" : "akka.http.scaladsl.server.directives.FileAndResourceDirectives.getFromResource", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#getFromResource(resourceName:String,contentType:akka.http.scaladsl.model.ContentType,classLoader:ClassLoader):akka.http.scaladsl.server.Route", "kind" : "def"}, {"label" : "getFromResource", "tail" : "(resourceName: String)(resolver: ContentTypeResolver): Route", "member" : "akka.http.scaladsl.server.directives.FileAndResourceDirectives.getFromResource", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#getFromResource(resourceName:String)(implicitresolver:akka.http.scaladsl.server.directives.ContentTypeResolver):akka.http.scaladsl.server.Route", "kind" : "def"}, {"label" : "getFromFile", "tail" : "(file: File, contentType: ContentType): Route", "member" : "akka.http.scaladsl.server.directives.FileAndResourceDirectives.getFromFile", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#getFromFile(file:java.io.File,contentType:akka.http.scaladsl.model.ContentType):akka.http.scaladsl.server.Route", "kind" : "def"}, {"label" : "getFromFile", "tail" : "(file: File)(resolver: ContentTypeResolver): Route", "member" : "akka.http.scaladsl.server.directives.FileAndResourceDirectives.getFromFile", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#getFromFile(file:java.io.File)(implicitresolver:akka.http.scaladsl.server.directives.ContentTypeResolver):akka.http.scaladsl.server.Route", "kind" : "def"}, {"label" : "getFromFile", "tail" : "(fileName: String)(resolver: ContentTypeResolver): Route", "member" : "akka.http.scaladsl.server.directives.FileAndResourceDirectives.getFromFile", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#getFromFile(fileName:String)(implicitresolver:akka.http.scaladsl.server.directives.ContentTypeResolver):akka.http.scaladsl.server.Route", "kind" : "def"}, {"label" : "handleRejections", "tail" : "(handler: RejectionHandler): Directive0", "member" : "akka.http.scaladsl.server.directives.ExecutionDirectives.handleRejections", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#handleRejections(handler:akka.http.scaladsl.server.RejectionHandler):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "handleExceptions", "tail" : "(handler: ExceptionHandler): Directive0", "member" : "akka.http.scaladsl.server.directives.ExecutionDirectives.handleExceptions", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#handleExceptions(handler:akka.http.scaladsl.server.ExceptionHandler):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "withPrecompressedMediaTypeSupport", "tail" : "(): Directive0", "member" : "akka.http.scaladsl.server.directives.CodingDirectives.withPrecompressedMediaTypeSupport", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#withPrecompressedMediaTypeSupport:akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "decodeRequest", "tail" : "(): Directive0", "member" : "akka.http.scaladsl.server.directives.CodingDirectives.decodeRequest", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#decodeRequest:akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "decodeRequestWith", "tail" : "(decoders: Decoder*): Directive0", "member" : "akka.http.scaladsl.server.directives.CodingDirectives.decodeRequestWith", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#decodeRequestWith(decoders:akka.http.scaladsl.coding.Decoder*):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "requestEncodedWith", "tail" : "(encoding: HttpEncoding): Directive0", "member" : "akka.http.scaladsl.server.directives.CodingDirectives.requestEncodedWith", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#requestEncodedWith(encoding:akka.http.scaladsl.model.headers.HttpEncoding):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "decodeRequestWith", "tail" : "(decoder: Decoder): Directive0", "member" : "akka.http.scaladsl.server.directives.CodingDirectives.decodeRequestWith", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#decodeRequestWith(decoder:akka.http.scaladsl.coding.Decoder):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "encodeResponseWith", "tail" : "(first: Encoder, more: Encoder*): Directive0", "member" : "akka.http.scaladsl.server.directives.CodingDirectives.encodeResponseWith", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#encodeResponseWith(first:akka.http.scaladsl.coding.Encoder,more:akka.http.scaladsl.coding.Encoder*):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "encodeResponse", "tail" : "(): Directive0", "member" : "akka.http.scaladsl.server.directives.CodingDirectives.encodeResponse", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#encodeResponse:akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "responseEncodingAccepted", "tail" : "(encoding: HttpEncoding): Directive0", "member" : "akka.http.scaladsl.server.directives.CodingDirectives.responseEncodingAccepted", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#responseEncodingAccepted(encoding:akka.http.scaladsl.model.headers.HttpEncoding):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "logRequestResult", "tail" : "(magnet: LoggingMagnet[(HttpRequest) â‡’ (RouteResult) â‡’ Unit]): Directive0", "member" : "akka.http.scaladsl.server.directives.DebuggingDirectives.logRequestResult", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#logRequestResult(magnet:akka.http.scaladsl.server.directives.LoggingMagnet[akka.http.scaladsl.model.HttpRequest=>(akka.http.scaladsl.server.RouteResult=>Unit)]):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "logResult", "tail" : "(magnet: LoggingMagnet[(RouteResult) â‡’ Unit]): Directive0", "member" : "akka.http.scaladsl.server.directives.DebuggingDirectives.logResult", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#logResult(magnet:akka.http.scaladsl.server.directives.LoggingMagnet[akka.http.scaladsl.server.RouteResult=>Unit]):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "logRequest", "tail" : "(magnet: LoggingMagnet[(HttpRequest) â‡’ Unit]): Directive0", "member" : "akka.http.scaladsl.server.directives.DebuggingDirectives.logRequest", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#logRequest(magnet:akka.http.scaladsl.server.directives.LoggingMagnet[akka.http.scaladsl.model.HttpRequest=>Unit]):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "deleteCookie", "tail" : "(name: String, domain: String, path: String): Directive0", "member" : "akka.http.scaladsl.server.directives.CookieDirectives.deleteCookie", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#deleteCookie(name:String,domain:String,path:String):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "deleteCookie", "tail" : "(first: HttpCookie, more: HttpCookie*): Directive0", "member" : "akka.http.scaladsl.server.directives.CookieDirectives.deleteCookie", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#deleteCookie(first:akka.http.scaladsl.model.headers.HttpCookie,more:akka.http.scaladsl.model.headers.HttpCookie*):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "setCookie", "tail" : "(first: HttpCookie, more: HttpCookie*): Directive0", "member" : "akka.http.scaladsl.server.directives.CookieDirectives.setCookie", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#setCookie(first:akka.http.scaladsl.model.headers.HttpCookie,more:akka.http.scaladsl.model.headers.HttpCookie*):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "optionalCookie", "tail" : "(name: String): Directive1[Option[HttpCookiePair]]", "member" : "akka.http.scaladsl.server.directives.CookieDirectives.optionalCookie", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#optionalCookie(name:String):akka.http.scaladsl.server.Directive1[Option[akka.http.scaladsl.model.headers.HttpCookiePair]]", "kind" : "def"}, {"label" : "cookie", "tail" : "(name: String): Directive1[HttpCookiePair]", "member" : "akka.http.scaladsl.server.directives.CookieDirectives.cookie", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#cookie(name:String):akka.http.scaladsl.server.Directive1[akka.http.scaladsl.model.headers.HttpCookiePair]", "kind" : "def"}, {"label" : "conditional", "tail" : "(eTag: Option[EntityTag], lastModified: Option[DateTime]): Directive0", "member" : "akka.http.scaladsl.server.directives.CacheConditionDirectives.conditional", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#conditional(eTag:Option[akka.http.scaladsl.model.headers.EntityTag],lastModified:Option[akka.http.scaladsl.model.DateTime]):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "conditional", "tail" : "(eTag: EntityTag, lastModified: DateTime): Directive0", "member" : "akka.http.scaladsl.server.directives.CacheConditionDirectives.conditional", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#conditional(eTag:akka.http.scaladsl.model.headers.EntityTag,lastModified:akka.http.scaladsl.model.DateTime):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "conditional", "tail" : "(lastModified: DateTime): Directive0", "member" : "akka.http.scaladsl.server.directives.CacheConditionDirectives.conditional", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#conditional(lastModified:akka.http.scaladsl.model.DateTime):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "conditional", "tail" : "(eTag: EntityTag): Directive0", "member" : "akka.http.scaladsl.server.directives.CacheConditionDirectives.conditional", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#conditional(eTag:akka.http.scaladsl.model.headers.EntityTag):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "toStrictEntity", "tail" : "(timeout: FiniteDuration): Directive0", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.toStrictEntity", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#toStrictEntity(timeout:scala.concurrent.duration.FiniteDuration):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "extractStrictEntity", "tail" : "(timeout: FiniteDuration): Directive1[Strict]", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.extractStrictEntity", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#extractStrictEntity(timeout:scala.concurrent.duration.FiniteDuration):akka.http.scaladsl.server.Directive1[akka.http.scaladsl.model.HttpEntity.Strict]", "kind" : "def"}, {"label" : "extractDataBytes", "tail" : "(): Directive1[Source[ByteString, Any]]", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.extractDataBytes", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#extractDataBytes:akka.http.scaladsl.server.Directive1[akka.stream.scaladsl.Source[akka.util.ByteString,Any]]", "kind" : "def"}, {"label" : "extractRequestEntity", "tail" : "(): Directive1[RequestEntity]", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.extractRequestEntity", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#extractRequestEntity:akka.http.scaladsl.server.Directive1[akka.http.scaladsl.model.RequestEntity]", "kind" : "def"}, {"label" : "extractRequestContext", "tail" : "(): Directive1[RequestContext]", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.extractRequestContext", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#extractRequestContext:akka.http.scaladsl.server.Directive1[akka.http.scaladsl.server.RequestContext]", "kind" : "def"}, {"label" : "extractParserSettings", "tail" : "(): Directive1[ParserSettings]", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.extractParserSettings", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#extractParserSettings:akka.http.scaladsl.server.Directive1[akka.http.scaladsl.settings.ParserSettings]", "kind" : "def"}, {"label" : "extractSettings", "tail" : "(): Directive1[RoutingSettings]", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.extractSettings", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#extractSettings:akka.http.scaladsl.server.Directive1[akka.http.scaladsl.settings.RoutingSettings]", "kind" : "def"}, {"label" : "mapSettings", "tail" : "(f: (RoutingSettings) â‡’ RoutingSettings): Directive0", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.mapSettings", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#mapSettings(f:akka.http.scaladsl.settings.RoutingSettings=>akka.http.scaladsl.settings.RoutingSettings):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "withSettings", "tail" : "(settings: RoutingSettings): Directive0", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.withSettings", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#withSettings(settings:akka.http.scaladsl.settings.RoutingSettings):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "extractLog", "tail" : "(): Directive1[LoggingAdapter]", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.extractLog", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#extractLog:akka.http.scaladsl.server.Directive1[akka.event.LoggingAdapter]", "kind" : "def"}, {"label" : "withLog", "tail" : "(log: LoggingAdapter): Directive0", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.withLog", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#withLog(log:akka.event.LoggingAdapter):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "extractActorSystem", "tail" : "(): Directive1[ActorSystem]", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.extractActorSystem", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#extractActorSystem:akka.http.scaladsl.server.Directive1[akka.actor.ActorSystem]", "kind" : "def"}, {"label" : "extractMaterializer", "tail" : "(): Directive1[Materializer]", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.extractMaterializer", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#extractMaterializer:akka.http.scaladsl.server.Directive1[akka.stream.Materializer]", "kind" : "def"}, {"label" : "withMaterializer", "tail" : "(materializer: Materializer): Directive0", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.withMaterializer", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#withMaterializer(materializer:akka.stream.Materializer):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "extractExecutionContext", "tail" : "(): Directive1[ExecutionContextExecutor]", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.extractExecutionContext", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#extractExecutionContext:akka.http.scaladsl.server.Directive1[scala.concurrent.ExecutionContextExecutor]", "kind" : "def"}, {"label" : "withExecutionContext", "tail" : "(ec: ExecutionContextExecutor): Directive0", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.withExecutionContext", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#withExecutionContext(ec:scala.concurrent.ExecutionContextExecutor):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "extractUri", "tail" : "(): Directive1[Uri]", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.extractUri", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#extractUri:akka.http.scaladsl.server.Directive1[akka.http.scaladsl.model.Uri]", "kind" : "def"}, {"label" : "extractRequest", "tail" : "(): Directive1[HttpRequest]", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.extractRequest", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#extractRequest:akka.http.scaladsl.server.Directive1[akka.http.scaladsl.model.HttpRequest]", "kind" : "def"}, {"label" : "extractMatchedPath", "tail" : "(): Directive1[Path]", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.extractMatchedPath", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#extractMatchedPath:akka.http.scaladsl.server.Directive1[akka.http.scaladsl.model.Uri.Path]", "kind" : "def"}, {"label" : "extractUnmatchedPath", "tail" : "(): Directive1[Path]", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.extractUnmatchedPath", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#extractUnmatchedPath:akka.http.scaladsl.server.Directive1[akka.http.scaladsl.model.Uri.Path]", "kind" : "def"}, {"label" : "mapUnmatchedPath", "tail" : "(f: (Path) â‡’ Path): Directive0", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.mapUnmatchedPath", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#mapUnmatchedPath(f:akka.http.scaladsl.model.Uri.Path=>akka.http.scaladsl.model.Uri.Path):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "cancelRejections", "tail" : "(cancelFilter: (Rejection) â‡’ Boolean): Directive0", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.cancelRejections", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#cancelRejections(cancelFilter:akka.http.scaladsl.server.Rejection=>Boolean):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "cancelRejections", "tail" : "(classes: Class[_]*): Directive0", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.cancelRejections", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#cancelRejections(classes:Class[_]*):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "cancelRejection", "tail" : "(rejection: Rejection): Directive0", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.cancelRejection", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#cancelRejection(rejection:akka.http.scaladsl.server.Rejection):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "textract", "tail" : "(f: (RequestContext) â‡’ L)(arg0: Tuple[L]): Directive[L]", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.textract", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#textract[L](f:akka.http.scaladsl.server.RequestContext=>L)(implicitevidence$2:akka.http.scaladsl.server.util.Tuple[L]):akka.http.scaladsl.server.Directive[L]", "kind" : "def"}, {"label" : "extract", "tail" : "(f: (RequestContext) â‡’ T): Directive1[T]", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.extract", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#extract[T](f:akka.http.scaladsl.server.RequestContext=>T):akka.http.scaladsl.server.Directive1[T]", "kind" : "def"}, {"label" : "tprovide", "tail" : "(values: L)(arg0: Tuple[L]): Directive[L]", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.tprovide", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#tprovide[L](values:L)(implicitevidence$1:akka.http.scaladsl.server.util.Tuple[L]):akka.http.scaladsl.server.Directive[L]", "kind" : "def"}, {"label" : "provide", "tail" : "(value: T): Directive1[T]", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.provide", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#provide[T](value:T):akka.http.scaladsl.server.Directive1[T]", "kind" : "def"}, {"label" : "pass", "tail" : "(): Directive0", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.pass", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#pass:akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "mapResponseHeaders", "tail" : "(f: (Seq[HttpHeader]) â‡’ Seq[HttpHeader]): Directive0", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.mapResponseHeaders", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#mapResponseHeaders(f:scala.collection.immutable.Seq[akka.http.scaladsl.model.HttpHeader]=>scala.collection.immutable.Seq[akka.http.scaladsl.model.HttpHeader]):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "mapResponseEntity", "tail" : "(f: (ResponseEntity) â‡’ ResponseEntity): Directive0", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.mapResponseEntity", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#mapResponseEntity(f:akka.http.scaladsl.model.ResponseEntity=>akka.http.scaladsl.model.ResponseEntity):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "mapResponse", "tail" : "(f: (HttpResponse) â‡’ HttpResponse): Directive0", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.mapResponse", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#mapResponse(f:akka.http.scaladsl.model.HttpResponse=>akka.http.scaladsl.model.HttpResponse):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "mapRejections", "tail" : "(f: (Seq[Rejection]) â‡’ Seq[Rejection]): Directive0", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.mapRejections", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#mapRejections(f:scala.collection.immutable.Seq[akka.http.scaladsl.server.Rejection]=>scala.collection.immutable.Seq[akka.http.scaladsl.server.Rejection]):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "recoverRejectionsWith", "tail" : "(f: (Seq[Rejection]) â‡’ Future[RouteResult]): Directive0", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.recoverRejectionsWith", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#recoverRejectionsWith(f:scala.collection.immutable.Seq[akka.http.scaladsl.server.Rejection]=>scala.concurrent.Future[akka.http.scaladsl.server.RouteResult]):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "recoverRejections", "tail" : "(f: (Seq[Rejection]) â‡’ RouteResult): Directive0", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.recoverRejections", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#recoverRejections(f:scala.collection.immutable.Seq[akka.http.scaladsl.server.Rejection]=>akka.http.scaladsl.server.RouteResult):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "mapRouteResultWithPF", "tail" : "(f: PartialFunction[RouteResult, Future[RouteResult]]): Directive0", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.mapRouteResultWithPF", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#mapRouteResultWithPF(f:PartialFunction[akka.http.scaladsl.server.RouteResult,scala.concurrent.Future[akka.http.scaladsl.server.RouteResult]]):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "mapRouteResultPF", "tail" : "(f: PartialFunction[RouteResult, RouteResult]): Directive0", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.mapRouteResultPF", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#mapRouteResultPF(f:PartialFunction[akka.http.scaladsl.server.RouteResult,akka.http.scaladsl.server.RouteResult]):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "mapRouteResultWith", "tail" : "(f: (RouteResult) â‡’ Future[RouteResult]): Directive0", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.mapRouteResultWith", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#mapRouteResultWith(f:akka.http.scaladsl.server.RouteResult=>scala.concurrent.Future[akka.http.scaladsl.server.RouteResult]):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "mapRouteResult", "tail" : "(f: (RouteResult) â‡’ RouteResult): Directive0", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.mapRouteResult", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#mapRouteResult(f:akka.http.scaladsl.server.RouteResult=>akka.http.scaladsl.server.RouteResult):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "mapRouteResultFuture", "tail" : "(f: (Future[RouteResult]) â‡’ Future[RouteResult]): Directive0", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.mapRouteResultFuture", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#mapRouteResultFuture(f:scala.concurrent.Future[akka.http.scaladsl.server.RouteResult]=>scala.concurrent.Future[akka.http.scaladsl.server.RouteResult]):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "mapRequest", "tail" : "(f: (HttpRequest) â‡’ HttpRequest): Directive0", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.mapRequest", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#mapRequest(f:akka.http.scaladsl.model.HttpRequest=>akka.http.scaladsl.model.HttpRequest):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "mapRequestContext", "tail" : "(f: (RequestContext) â‡’ RequestContext): Directive0", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.mapRequestContext", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#mapRequestContext(f:akka.http.scaladsl.server.RequestContext=>akka.http.scaladsl.server.RequestContext):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "mapInnerRoute", "tail" : "(f: (Route) â‡’ Route): Directive0", "member" : "akka.http.scaladsl.server.directives.BasicDirectives.mapInnerRoute", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#mapInnerRoute(f:akka.http.scaladsl.server.Route=>akka.http.scaladsl.server.Route):akka.http.scaladsl.server.Directive0", "kind" : "def"}, {"label" : "concat", "tail" : "(routes: Route*): Route", "member" : "akka.http.scaladsl.server.RouteConcatenation.concat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#concat(routes:akka.http.scaladsl.server.Route*):akka.http.scaladsl.server.Route", "kind" : "def"}, {"label" : "_enhanceRouteWithConcatenation", "tail" : "(route: Route): RouteWithConcatenation", "member" : "akka.http.scaladsl.server.RouteConcatenation._enhanceRouteWithConcatenation", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#_enhanceRouteWithConcatenation(route:akka.http.scaladsl.server.Route):akka.http.scaladsl.server.RouteConcatenation.RouteWithConcatenation", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cn\/chenhuanming\/hello\/akka\/http\/Server$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "cn.chenhuanming.hello" : [], "akka.pattern" : [], "cn.chenhuanming.hello.akka" : [], "akka" : [], "cn.chenhuanming" : [], "cn" : [], "cn.chenhuanming.hello.akka.http.actor" : [{"name" : "cn.chenhuanming.hello.akka.http.actor.HelloActor", "shortDescription" : "", "members_class" : [{"label" : "receive", "tail" : "(): Receive", "member" : "cn.chenhuanming.hello.akka.http.actor.HelloActor.receive", "link" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html#receive:HelloActor.this.Receive", "kind" : "def"}, {"member" : "cn.chenhuanming.hello.akka.http.actor.HelloActor#<init>", "error" : "unsupported entity"}, {"label" : "unhandled", "tail" : "(message: Any): Unit", "member" : "akka.actor.Actor.unhandled", "link" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html#unhandled(message:Any):Unit", "kind" : "def"}, {"label" : "postRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.postRestart", "link" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html#postRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "preRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.Actor.preRestart", "link" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html#preRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "postStop", "tail" : "(): Unit", "member" : "akka.actor.Actor.postStop", "link" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html#postStop():Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.preStart", "link" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html#preStart():Unit", "kind" : "def"}, {"label" : "supervisorStrategy", "tail" : "(): SupervisorStrategy", "member" : "akka.actor.Actor.supervisorStrategy", "link" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html#supervisorStrategy:akka.actor.SupervisorStrategy", "kind" : "def"}, {"label" : "aroundPostRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.aroundPostRestart", "link" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html#aroundPostRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "aroundPreRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.Actor.aroundPreRestart", "link" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html#aroundPreRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "aroundPostStop", "tail" : "(): Unit", "member" : "akka.actor.Actor.aroundPostStop", "link" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html#aroundPostStop():Unit", "kind" : "def"}, {"label" : "aroundPreStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.aroundPreStart", "link" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html#aroundPreStart():Unit", "kind" : "def"}, {"label" : "aroundReceive", "tail" : "(receive: akka.actor.Actor.Receive, msg: Any): Unit", "member" : "akka.actor.Actor.aroundReceive", "link" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html#aroundReceive(receive:akka.actor.Actor.Receive,msg:Any):Unit", "kind" : "def"}, {"label" : "sender", "tail" : "(): ActorRef", "member" : "akka.actor.Actor.sender", "link" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html#sender():akka.actor.ActorRef", "kind" : "final def"}, {"label" : "self", "tail" : ": ActorRef", "member" : "akka.actor.Actor.self", "link" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html#self:akka.actor.ActorRef", "kind" : "implicit final val"}, {"label" : "context", "tail" : ": ActorContext", "member" : "akka.actor.Actor.context", "link" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html#context:akka.actor.ActorContext", "kind" : "implicit val"}, {"label" : "Receive", "tail" : "", "member" : "akka.actor.Actor.Receive", "link" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html#Receive=akka.actor.Actor.Receive", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cn\/chenhuanming\/hello\/akka\/http\/actor\/HelloActor.html", "kind" : "class"}], "cn.chenhuanming.hello.akka.http.domain" : [{"name" : "cn.chenhuanming.hello.akka.http.domain.HelloDTO", "shortDescription" : "", "members_case class" : [{"member" : "cn.chenhuanming.hello.akka.http.domain.HelloDTO#<init>", "error" : "unsupported entity"}, {"label" : "name", "tail" : ": String", "member" : "cn.chenhuanming.hello.akka.http.domain.HelloDTO.name", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/HelloDTO.html#name:String", "kind" : "val"}, {"label" : "str", "tail" : ": String", "member" : "cn.chenhuanming.hello.akka.http.domain.HelloDTO.str", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/HelloDTO.html#str:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/HelloDTO.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/HelloDTO.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/HelloDTO.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/HelloDTO.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/HelloDTO.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/HelloDTO.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/HelloDTO.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/HelloDTO.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/HelloDTO.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/HelloDTO.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/HelloDTO.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/HelloDTO.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/HelloDTO.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/HelloDTO.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/HelloDTO.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/HelloDTO.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/HelloDTO.html", "kind" : "case class"}, {"name" : "cn.chenhuanming.hello.akka.http.domain.JsonSupport", "members_trait" : [{"label" : "RootJsArrayFormat", "tail" : "", "member" : "spray.json.AdditionalFormats.RootJsArrayFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#RootJsArrayFormat", "kind" : "implicit object"}, {"label" : "RootJsObjectFormat", "tail" : "", "member" : "spray.json.AdditionalFormats.RootJsObjectFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#RootJsObjectFormat", "kind" : "implicit object"}, {"label" : "JsValueFormat", "tail" : "", "member" : "spray.json.AdditionalFormats.JsValueFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#JsValueFormat", "kind" : "implicit object"}, {"label" : "OptionFormat", "tail" : "", "member" : "spray.json.StandardFormats.OptionFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#OptionFormat[T]extendsStandardFormats.this.JF[Option[T]]", "kind" : "class"}, {"label" : "SymbolJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.SymbolJsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#SymbolJsonFormat", "kind" : "implicit object"}, {"label" : "StringJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.StringJsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#StringJsonFormat", "kind" : "implicit object"}, {"label" : "CharJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.CharJsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#CharJsonFormat", "kind" : "implicit object"}, {"label" : "BooleanJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.BooleanJsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#BooleanJsonFormat", "kind" : "implicit object"}, {"label" : "UnitJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.UnitJsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#UnitJsonFormat", "kind" : "implicit object"}, {"label" : "BigIntJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.BigIntJsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#BigIntJsonFormat", "kind" : "implicit object"}, {"label" : "BigDecimalJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.BigDecimalJsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#BigDecimalJsonFormat", "kind" : "implicit object"}, {"label" : "ShortJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.ShortJsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#ShortJsonFormat", "kind" : "implicit object"}, {"label" : "ByteJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.ByteJsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#ByteJsonFormat", "kind" : "implicit object"}, {"label" : "DoubleJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.DoubleJsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#DoubleJsonFormat", "kind" : "implicit object"}, {"label" : "FloatJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.FloatJsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#FloatJsonFormat", "kind" : "implicit object"}, {"label" : "LongJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.LongJsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#LongJsonFormat", "kind" : "implicit object"}, {"label" : "IntJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.IntJsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#IntJsonFormat", "kind" : "implicit object"}, {"label" : "helloDTOFormat", "tail" : ": RootJsonFormat[HelloDTO]", "member" : "cn.chenhuanming.hello.akka.http.domain.JsonSupport.helloDTOFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#helloDTOFormat:spray.json.RootJsonFormat[cn.chenhuanming.hello.akka.http.domain.HelloDTO]", "kind" : "implicit val"}, {"label" : "safeReader", "tail" : "(arg0: JsonReader[A]): JsonReader[Either[Exception, A]]", "member" : "spray.json.AdditionalFormats.safeReader", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#safeReader[A](implicitevidence$1:spray.json.JsonReader[A]):spray.json.JsonReader[Either[Exception,A]]", "kind" : "def"}, {"label" : "lazyFormat", "tail" : "(format: â‡’ JsonFormat[T]): JsonFormat[T] { lazy val delegate: spray.json.JsonFormat[T] }", "member" : "spray.json.AdditionalFormats.lazyFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#lazyFormat[T](format:=>spray.json.JsonFormat[T]):spray.json.JsonFormat[T]{lazyvaldelegate:spray.json.JsonFormat[T]}", "kind" : "def"}, {"label" : "lift", "tail" : "(reader: RootJsonReader[T]): RootJsonFormat[T]", "member" : "spray.json.AdditionalFormats.lift", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#lift[T<:AnyRef](reader:spray.json.RootJsonReader[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "lift", "tail" : "(reader: JsonReader[T]): JsonFormat[T]", "member" : "spray.json.AdditionalFormats.lift", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#lift[T<:AnyRef](reader:spray.json.JsonReader[T]):spray.json.JsonFormat[T]", "kind" : "def"}, {"label" : "lift", "tail" : "(writer: RootJsonWriter[T]): RootJsonFormat[T]", "member" : "spray.json.AdditionalFormats.lift", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#lift[T](writer:spray.json.RootJsonWriter[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "lift", "tail" : "(writer: JsonWriter[T]): JsonFormat[T] { def read(value: spray.json.JsValue): Nothing }", "member" : "spray.json.AdditionalFormats.lift", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#lift[T](writer:spray.json.JsonWriter[T]):spray.json.JsonFormat[T]{defread(value:spray.json.JsValue):Nothing}", "kind" : "def"}, {"label" : "rootFormat", "tail" : "(format: JsonFormat[T]): RootJsonFormat[T]", "member" : "spray.json.AdditionalFormats.rootFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#rootFormat[T](format:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "rootJsonFormat", "tail" : "(reader: RootJsonReader[T], writer: RootJsonWriter[T]): RootJsonFormat[T]", "member" : "spray.json.AdditionalFormats.rootJsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#rootJsonFormat[T](reader:spray.json.RootJsonReader[T],writer:spray.json.RootJsonWriter[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(reader: JsonReader[T], writer: JsonWriter[T]): JsonFormat[T]", "member" : "spray.json.AdditionalFormats.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat[T](reader:spray.json.JsonReader[T],writer:spray.json.JsonWriter[T]):spray.json.JsonFormat[T]", "kind" : "def"}, {"label" : "extractFieldNames", "tail" : "(classManifest: ClassManifest[_]): Array[String]", "member" : "spray.json.ProductFormats.extractFieldNames", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#extractFieldNames(classManifest:ClassManifest[_]):Array[String]", "kind" : "def"}, {"label" : "fromField", "tail" : "(value: JsValue, fieldName: String)(reader: JsonReader[T]): T", "member" : "spray.json.ProductFormats.fromField", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#fromField[T](value:spray.json.JsValue,fieldName:String)(implicitreader:spray.json.JsonReader[T]):T", "kind" : "def"}, {"label" : "productElement2Field", "tail" : "(fieldName: String, p: Product, ix: Int, rest: List[JsField])(writer: JsonWriter[T]): List[JsField]", "member" : "spray.json.ProductFormats.productElement2Field", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#productElement2Field[T](fieldName:String,p:Product,ix:Int,rest:List[spray.json.JsField])(implicitwriter:spray.json.JsonWriter[T]):List[spray.json.JsField]", "kind" : "def"}, {"label" : "jsonFormat0", "tail" : "(construct: () â‡’ T): RootJsonFormat[T]", "member" : "spray.json.ProductFormats.jsonFormat0", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat0[T](construct:()=>T):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20, P21, P22) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String, fieldName18: String, fieldName19: String, fieldName20: String, fieldName21: String, fieldName22: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20], arg20: JF[P21], arg21: JF[P22]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,P22,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,P22)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String,fieldName18:String,fieldName19:String,fieldName20:String,fieldName21:String,fieldName22:String)(implicitevidence$507:ProductFormatsInstances.this.JF[P1],implicitevidence$508:ProductFormatsInstances.this.JF[P2],implicitevidence$509:ProductFormatsInstances.this.JF[P3],implicitevidence$510:ProductFormatsInstances.this.JF[P4],implicitevidence$511:ProductFormatsInstances.this.JF[P5],implicitevidence$512:ProductFormatsInstances.this.JF[P6],implicitevidence$513:ProductFormatsInstances.this.JF[P7],implicitevidence$514:ProductFormatsInstances.this.JF[P8],implicitevidence$515:ProductFormatsInstances.this.JF[P9],implicitevidence$516:ProductFormatsInstances.this.JF[P10],implicitevidence$517:ProductFormatsInstances.this.JF[P11],implicitevidence$518:ProductFormatsInstances.this.JF[P12],implicitevidence$519:ProductFormatsInstances.this.JF[P13],implicitevidence$520:ProductFormatsInstances.this.JF[P14],implicitevidence$521:ProductFormatsInstances.this.JF[P15],implicitevidence$522:ProductFormatsInstances.this.JF[P16],implicitevidence$523:ProductFormatsInstances.this.JF[P17],implicitevidence$524:ProductFormatsInstances.this.JF[P18],implicitevidence$525:ProductFormatsInstances.this.JF[P19],implicitevidence$526:ProductFormatsInstances.this.JF[P20],implicitevidence$527:ProductFormatsInstances.this.JF[P21],implicitevidence$528:ProductFormatsInstances.this.JF[P22]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat22", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20, P21, P22) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20], arg20: JF[P21], arg21: JF[P22], arg22: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat22", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat22[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,P22,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,P22)=>T)(implicitevidence$484:ProductFormatsInstances.this.JF[P1],implicitevidence$485:ProductFormatsInstances.this.JF[P2],implicitevidence$486:ProductFormatsInstances.this.JF[P3],implicitevidence$487:ProductFormatsInstances.this.JF[P4],implicitevidence$488:ProductFormatsInstances.this.JF[P5],implicitevidence$489:ProductFormatsInstances.this.JF[P6],implicitevidence$490:ProductFormatsInstances.this.JF[P7],implicitevidence$491:ProductFormatsInstances.this.JF[P8],implicitevidence$492:ProductFormatsInstances.this.JF[P9],implicitevidence$493:ProductFormatsInstances.this.JF[P10],implicitevidence$494:ProductFormatsInstances.this.JF[P11],implicitevidence$495:ProductFormatsInstances.this.JF[P12],implicitevidence$496:ProductFormatsInstances.this.JF[P13],implicitevidence$497:ProductFormatsInstances.this.JF[P14],implicitevidence$498:ProductFormatsInstances.this.JF[P15],implicitevidence$499:ProductFormatsInstances.this.JF[P16],implicitevidence$500:ProductFormatsInstances.this.JF[P17],implicitevidence$501:ProductFormatsInstances.this.JF[P18],implicitevidence$502:ProductFormatsInstances.this.JF[P19],implicitevidence$503:ProductFormatsInstances.this.JF[P20],implicitevidence$504:ProductFormatsInstances.this.JF[P21],implicitevidence$505:ProductFormatsInstances.this.JF[P22],implicitevidence$506:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20, P21) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String, fieldName18: String, fieldName19: String, fieldName20: String, fieldName21: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20], arg20: JF[P21]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String,fieldName18:String,fieldName19:String,fieldName20:String,fieldName21:String)(implicitevidence$463:ProductFormatsInstances.this.JF[P1],implicitevidence$464:ProductFormatsInstances.this.JF[P2],implicitevidence$465:ProductFormatsInstances.this.JF[P3],implicitevidence$466:ProductFormatsInstances.this.JF[P4],implicitevidence$467:ProductFormatsInstances.this.JF[P5],implicitevidence$468:ProductFormatsInstances.this.JF[P6],implicitevidence$469:ProductFormatsInstances.this.JF[P7],implicitevidence$470:ProductFormatsInstances.this.JF[P8],implicitevidence$471:ProductFormatsInstances.this.JF[P9],implicitevidence$472:ProductFormatsInstances.this.JF[P10],implicitevidence$473:ProductFormatsInstances.this.JF[P11],implicitevidence$474:ProductFormatsInstances.this.JF[P12],implicitevidence$475:ProductFormatsInstances.this.JF[P13],implicitevidence$476:ProductFormatsInstances.this.JF[P14],implicitevidence$477:ProductFormatsInstances.this.JF[P15],implicitevidence$478:ProductFormatsInstances.this.JF[P16],implicitevidence$479:ProductFormatsInstances.this.JF[P17],implicitevidence$480:ProductFormatsInstances.this.JF[P18],implicitevidence$481:ProductFormatsInstances.this.JF[P19],implicitevidence$482:ProductFormatsInstances.this.JF[P20],implicitevidence$483:ProductFormatsInstances.this.JF[P21]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat21", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20, P21) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20], arg20: JF[P21], arg21: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat21", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat21[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21)=>T)(implicitevidence$441:ProductFormatsInstances.this.JF[P1],implicitevidence$442:ProductFormatsInstances.this.JF[P2],implicitevidence$443:ProductFormatsInstances.this.JF[P3],implicitevidence$444:ProductFormatsInstances.this.JF[P4],implicitevidence$445:ProductFormatsInstances.this.JF[P5],implicitevidence$446:ProductFormatsInstances.this.JF[P6],implicitevidence$447:ProductFormatsInstances.this.JF[P7],implicitevidence$448:ProductFormatsInstances.this.JF[P8],implicitevidence$449:ProductFormatsInstances.this.JF[P9],implicitevidence$450:ProductFormatsInstances.this.JF[P10],implicitevidence$451:ProductFormatsInstances.this.JF[P11],implicitevidence$452:ProductFormatsInstances.this.JF[P12],implicitevidence$453:ProductFormatsInstances.this.JF[P13],implicitevidence$454:ProductFormatsInstances.this.JF[P14],implicitevidence$455:ProductFormatsInstances.this.JF[P15],implicitevidence$456:ProductFormatsInstances.this.JF[P16],implicitevidence$457:ProductFormatsInstances.this.JF[P17],implicitevidence$458:ProductFormatsInstances.this.JF[P18],implicitevidence$459:ProductFormatsInstances.this.JF[P19],implicitevidence$460:ProductFormatsInstances.this.JF[P20],implicitevidence$461:ProductFormatsInstances.this.JF[P21],implicitevidence$462:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String, fieldName18: String, fieldName19: String, fieldName20: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String,fieldName18:String,fieldName19:String,fieldName20:String)(implicitevidence$421:ProductFormatsInstances.this.JF[P1],implicitevidence$422:ProductFormatsInstances.this.JF[P2],implicitevidence$423:ProductFormatsInstances.this.JF[P3],implicitevidence$424:ProductFormatsInstances.this.JF[P4],implicitevidence$425:ProductFormatsInstances.this.JF[P5],implicitevidence$426:ProductFormatsInstances.this.JF[P6],implicitevidence$427:ProductFormatsInstances.this.JF[P7],implicitevidence$428:ProductFormatsInstances.this.JF[P8],implicitevidence$429:ProductFormatsInstances.this.JF[P9],implicitevidence$430:ProductFormatsInstances.this.JF[P10],implicitevidence$431:ProductFormatsInstances.this.JF[P11],implicitevidence$432:ProductFormatsInstances.this.JF[P12],implicitevidence$433:ProductFormatsInstances.this.JF[P13],implicitevidence$434:ProductFormatsInstances.this.JF[P14],implicitevidence$435:ProductFormatsInstances.this.JF[P15],implicitevidence$436:ProductFormatsInstances.this.JF[P16],implicitevidence$437:ProductFormatsInstances.this.JF[P17],implicitevidence$438:ProductFormatsInstances.this.JF[P18],implicitevidence$439:ProductFormatsInstances.this.JF[P19],implicitevidence$440:ProductFormatsInstances.this.JF[P20]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat20", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20], arg20: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat20", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat20[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20)=>T)(implicitevidence$400:ProductFormatsInstances.this.JF[P1],implicitevidence$401:ProductFormatsInstances.this.JF[P2],implicitevidence$402:ProductFormatsInstances.this.JF[P3],implicitevidence$403:ProductFormatsInstances.this.JF[P4],implicitevidence$404:ProductFormatsInstances.this.JF[P5],implicitevidence$405:ProductFormatsInstances.this.JF[P6],implicitevidence$406:ProductFormatsInstances.this.JF[P7],implicitevidence$407:ProductFormatsInstances.this.JF[P8],implicitevidence$408:ProductFormatsInstances.this.JF[P9],implicitevidence$409:ProductFormatsInstances.this.JF[P10],implicitevidence$410:ProductFormatsInstances.this.JF[P11],implicitevidence$411:ProductFormatsInstances.this.JF[P12],implicitevidence$412:ProductFormatsInstances.this.JF[P13],implicitevidence$413:ProductFormatsInstances.this.JF[P14],implicitevidence$414:ProductFormatsInstances.this.JF[P15],implicitevidence$415:ProductFormatsInstances.this.JF[P16],implicitevidence$416:ProductFormatsInstances.this.JF[P17],implicitevidence$417:ProductFormatsInstances.this.JF[P18],implicitevidence$418:ProductFormatsInstances.this.JF[P19],implicitevidence$419:ProductFormatsInstances.this.JF[P20],implicitevidence$420:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String, fieldName18: String, fieldName19: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String,fieldName18:String,fieldName19:String)(implicitevidence$381:ProductFormatsInstances.this.JF[P1],implicitevidence$382:ProductFormatsInstances.this.JF[P2],implicitevidence$383:ProductFormatsInstances.this.JF[P3],implicitevidence$384:ProductFormatsInstances.this.JF[P4],implicitevidence$385:ProductFormatsInstances.this.JF[P5],implicitevidence$386:ProductFormatsInstances.this.JF[P6],implicitevidence$387:ProductFormatsInstances.this.JF[P7],implicitevidence$388:ProductFormatsInstances.this.JF[P8],implicitevidence$389:ProductFormatsInstances.this.JF[P9],implicitevidence$390:ProductFormatsInstances.this.JF[P10],implicitevidence$391:ProductFormatsInstances.this.JF[P11],implicitevidence$392:ProductFormatsInstances.this.JF[P12],implicitevidence$393:ProductFormatsInstances.this.JF[P13],implicitevidence$394:ProductFormatsInstances.this.JF[P14],implicitevidence$395:ProductFormatsInstances.this.JF[P15],implicitevidence$396:ProductFormatsInstances.this.JF[P16],implicitevidence$397:ProductFormatsInstances.this.JF[P17],implicitevidence$398:ProductFormatsInstances.this.JF[P18],implicitevidence$399:ProductFormatsInstances.this.JF[P19]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat19", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat19", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat19[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19)=>T)(implicitevidence$361:ProductFormatsInstances.this.JF[P1],implicitevidence$362:ProductFormatsInstances.this.JF[P2],implicitevidence$363:ProductFormatsInstances.this.JF[P3],implicitevidence$364:ProductFormatsInstances.this.JF[P4],implicitevidence$365:ProductFormatsInstances.this.JF[P5],implicitevidence$366:ProductFormatsInstances.this.JF[P6],implicitevidence$367:ProductFormatsInstances.this.JF[P7],implicitevidence$368:ProductFormatsInstances.this.JF[P8],implicitevidence$369:ProductFormatsInstances.this.JF[P9],implicitevidence$370:ProductFormatsInstances.this.JF[P10],implicitevidence$371:ProductFormatsInstances.this.JF[P11],implicitevidence$372:ProductFormatsInstances.this.JF[P12],implicitevidence$373:ProductFormatsInstances.this.JF[P13],implicitevidence$374:ProductFormatsInstances.this.JF[P14],implicitevidence$375:ProductFormatsInstances.this.JF[P15],implicitevidence$376:ProductFormatsInstances.this.JF[P16],implicitevidence$377:ProductFormatsInstances.this.JF[P17],implicitevidence$378:ProductFormatsInstances.this.JF[P18],implicitevidence$379:ProductFormatsInstances.this.JF[P19],implicitevidence$380:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String, fieldName18: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String,fieldName18:String)(implicitevidence$343:ProductFormatsInstances.this.JF[P1],implicitevidence$344:ProductFormatsInstances.this.JF[P2],implicitevidence$345:ProductFormatsInstances.this.JF[P3],implicitevidence$346:ProductFormatsInstances.this.JF[P4],implicitevidence$347:ProductFormatsInstances.this.JF[P5],implicitevidence$348:ProductFormatsInstances.this.JF[P6],implicitevidence$349:ProductFormatsInstances.this.JF[P7],implicitevidence$350:ProductFormatsInstances.this.JF[P8],implicitevidence$351:ProductFormatsInstances.this.JF[P9],implicitevidence$352:ProductFormatsInstances.this.JF[P10],implicitevidence$353:ProductFormatsInstances.this.JF[P11],implicitevidence$354:ProductFormatsInstances.this.JF[P12],implicitevidence$355:ProductFormatsInstances.this.JF[P13],implicitevidence$356:ProductFormatsInstances.this.JF[P14],implicitevidence$357:ProductFormatsInstances.this.JF[P15],implicitevidence$358:ProductFormatsInstances.this.JF[P16],implicitevidence$359:ProductFormatsInstances.this.JF[P17],implicitevidence$360:ProductFormatsInstances.this.JF[P18]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat18", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat18", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat18[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18)=>T)(implicitevidence$324:ProductFormatsInstances.this.JF[P1],implicitevidence$325:ProductFormatsInstances.this.JF[P2],implicitevidence$326:ProductFormatsInstances.this.JF[P3],implicitevidence$327:ProductFormatsInstances.this.JF[P4],implicitevidence$328:ProductFormatsInstances.this.JF[P5],implicitevidence$329:ProductFormatsInstances.this.JF[P6],implicitevidence$330:ProductFormatsInstances.this.JF[P7],implicitevidence$331:ProductFormatsInstances.this.JF[P8],implicitevidence$332:ProductFormatsInstances.this.JF[P9],implicitevidence$333:ProductFormatsInstances.this.JF[P10],implicitevidence$334:ProductFormatsInstances.this.JF[P11],implicitevidence$335:ProductFormatsInstances.this.JF[P12],implicitevidence$336:ProductFormatsInstances.this.JF[P13],implicitevidence$337:ProductFormatsInstances.this.JF[P14],implicitevidence$338:ProductFormatsInstances.this.JF[P15],implicitevidence$339:ProductFormatsInstances.this.JF[P16],implicitevidence$340:ProductFormatsInstances.this.JF[P17],implicitevidence$341:ProductFormatsInstances.this.JF[P18],implicitevidence$342:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String)(implicitevidence$307:ProductFormatsInstances.this.JF[P1],implicitevidence$308:ProductFormatsInstances.this.JF[P2],implicitevidence$309:ProductFormatsInstances.this.JF[P3],implicitevidence$310:ProductFormatsInstances.this.JF[P4],implicitevidence$311:ProductFormatsInstances.this.JF[P5],implicitevidence$312:ProductFormatsInstances.this.JF[P6],implicitevidence$313:ProductFormatsInstances.this.JF[P7],implicitevidence$314:ProductFormatsInstances.this.JF[P8],implicitevidence$315:ProductFormatsInstances.this.JF[P9],implicitevidence$316:ProductFormatsInstances.this.JF[P10],implicitevidence$317:ProductFormatsInstances.this.JF[P11],implicitevidence$318:ProductFormatsInstances.this.JF[P12],implicitevidence$319:ProductFormatsInstances.this.JF[P13],implicitevidence$320:ProductFormatsInstances.this.JF[P14],implicitevidence$321:ProductFormatsInstances.this.JF[P15],implicitevidence$322:ProductFormatsInstances.this.JF[P16],implicitevidence$323:ProductFormatsInstances.this.JF[P17]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat17", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat17", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat17[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17)=>T)(implicitevidence$289:ProductFormatsInstances.this.JF[P1],implicitevidence$290:ProductFormatsInstances.this.JF[P2],implicitevidence$291:ProductFormatsInstances.this.JF[P3],implicitevidence$292:ProductFormatsInstances.this.JF[P4],implicitevidence$293:ProductFormatsInstances.this.JF[P5],implicitevidence$294:ProductFormatsInstances.this.JF[P6],implicitevidence$295:ProductFormatsInstances.this.JF[P7],implicitevidence$296:ProductFormatsInstances.this.JF[P8],implicitevidence$297:ProductFormatsInstances.this.JF[P9],implicitevidence$298:ProductFormatsInstances.this.JF[P10],implicitevidence$299:ProductFormatsInstances.this.JF[P11],implicitevidence$300:ProductFormatsInstances.this.JF[P12],implicitevidence$301:ProductFormatsInstances.this.JF[P13],implicitevidence$302:ProductFormatsInstances.this.JF[P14],implicitevidence$303:ProductFormatsInstances.this.JF[P15],implicitevidence$304:ProductFormatsInstances.this.JF[P16],implicitevidence$305:ProductFormatsInstances.this.JF[P17],implicitevidence$306:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String)(implicitevidence$273:ProductFormatsInstances.this.JF[P1],implicitevidence$274:ProductFormatsInstances.this.JF[P2],implicitevidence$275:ProductFormatsInstances.this.JF[P3],implicitevidence$276:ProductFormatsInstances.this.JF[P4],implicitevidence$277:ProductFormatsInstances.this.JF[P5],implicitevidence$278:ProductFormatsInstances.this.JF[P6],implicitevidence$279:ProductFormatsInstances.this.JF[P7],implicitevidence$280:ProductFormatsInstances.this.JF[P8],implicitevidence$281:ProductFormatsInstances.this.JF[P9],implicitevidence$282:ProductFormatsInstances.this.JF[P10],implicitevidence$283:ProductFormatsInstances.this.JF[P11],implicitevidence$284:ProductFormatsInstances.this.JF[P12],implicitevidence$285:ProductFormatsInstances.this.JF[P13],implicitevidence$286:ProductFormatsInstances.this.JF[P14],implicitevidence$287:ProductFormatsInstances.this.JF[P15],implicitevidence$288:ProductFormatsInstances.this.JF[P16]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat16", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat16", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat16[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16)=>T)(implicitevidence$256:ProductFormatsInstances.this.JF[P1],implicitevidence$257:ProductFormatsInstances.this.JF[P2],implicitevidence$258:ProductFormatsInstances.this.JF[P3],implicitevidence$259:ProductFormatsInstances.this.JF[P4],implicitevidence$260:ProductFormatsInstances.this.JF[P5],implicitevidence$261:ProductFormatsInstances.this.JF[P6],implicitevidence$262:ProductFormatsInstances.this.JF[P7],implicitevidence$263:ProductFormatsInstances.this.JF[P8],implicitevidence$264:ProductFormatsInstances.this.JF[P9],implicitevidence$265:ProductFormatsInstances.this.JF[P10],implicitevidence$266:ProductFormatsInstances.this.JF[P11],implicitevidence$267:ProductFormatsInstances.this.JF[P12],implicitevidence$268:ProductFormatsInstances.this.JF[P13],implicitevidence$269:ProductFormatsInstances.this.JF[P14],implicitevidence$270:ProductFormatsInstances.this.JF[P15],implicitevidence$271:ProductFormatsInstances.this.JF[P16],implicitevidence$272:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String)(implicitevidence$241:ProductFormatsInstances.this.JF[P1],implicitevidence$242:ProductFormatsInstances.this.JF[P2],implicitevidence$243:ProductFormatsInstances.this.JF[P3],implicitevidence$244:ProductFormatsInstances.this.JF[P4],implicitevidence$245:ProductFormatsInstances.this.JF[P5],implicitevidence$246:ProductFormatsInstances.this.JF[P6],implicitevidence$247:ProductFormatsInstances.this.JF[P7],implicitevidence$248:ProductFormatsInstances.this.JF[P8],implicitevidence$249:ProductFormatsInstances.this.JF[P9],implicitevidence$250:ProductFormatsInstances.this.JF[P10],implicitevidence$251:ProductFormatsInstances.this.JF[P11],implicitevidence$252:ProductFormatsInstances.this.JF[P12],implicitevidence$253:ProductFormatsInstances.this.JF[P13],implicitevidence$254:ProductFormatsInstances.this.JF[P14],implicitevidence$255:ProductFormatsInstances.this.JF[P15]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat15", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat15", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat15[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15)=>T)(implicitevidence$225:ProductFormatsInstances.this.JF[P1],implicitevidence$226:ProductFormatsInstances.this.JF[P2],implicitevidence$227:ProductFormatsInstances.this.JF[P3],implicitevidence$228:ProductFormatsInstances.this.JF[P4],implicitevidence$229:ProductFormatsInstances.this.JF[P5],implicitevidence$230:ProductFormatsInstances.this.JF[P6],implicitevidence$231:ProductFormatsInstances.this.JF[P7],implicitevidence$232:ProductFormatsInstances.this.JF[P8],implicitevidence$233:ProductFormatsInstances.this.JF[P9],implicitevidence$234:ProductFormatsInstances.this.JF[P10],implicitevidence$235:ProductFormatsInstances.this.JF[P11],implicitevidence$236:ProductFormatsInstances.this.JF[P12],implicitevidence$237:ProductFormatsInstances.this.JF[P13],implicitevidence$238:ProductFormatsInstances.this.JF[P14],implicitevidence$239:ProductFormatsInstances.this.JF[P15],implicitevidence$240:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String)(implicitevidence$211:ProductFormatsInstances.this.JF[P1],implicitevidence$212:ProductFormatsInstances.this.JF[P2],implicitevidence$213:ProductFormatsInstances.this.JF[P3],implicitevidence$214:ProductFormatsInstances.this.JF[P4],implicitevidence$215:ProductFormatsInstances.this.JF[P5],implicitevidence$216:ProductFormatsInstances.this.JF[P6],implicitevidence$217:ProductFormatsInstances.this.JF[P7],implicitevidence$218:ProductFormatsInstances.this.JF[P8],implicitevidence$219:ProductFormatsInstances.this.JF[P9],implicitevidence$220:ProductFormatsInstances.this.JF[P10],implicitevidence$221:ProductFormatsInstances.this.JF[P11],implicitevidence$222:ProductFormatsInstances.this.JF[P12],implicitevidence$223:ProductFormatsInstances.this.JF[P13],implicitevidence$224:ProductFormatsInstances.this.JF[P14]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat14", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat14", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat14[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14)=>T)(implicitevidence$196:ProductFormatsInstances.this.JF[P1],implicitevidence$197:ProductFormatsInstances.this.JF[P2],implicitevidence$198:ProductFormatsInstances.this.JF[P3],implicitevidence$199:ProductFormatsInstances.this.JF[P4],implicitevidence$200:ProductFormatsInstances.this.JF[P5],implicitevidence$201:ProductFormatsInstances.this.JF[P6],implicitevidence$202:ProductFormatsInstances.this.JF[P7],implicitevidence$203:ProductFormatsInstances.this.JF[P8],implicitevidence$204:ProductFormatsInstances.this.JF[P9],implicitevidence$205:ProductFormatsInstances.this.JF[P10],implicitevidence$206:ProductFormatsInstances.this.JF[P11],implicitevidence$207:ProductFormatsInstances.this.JF[P12],implicitevidence$208:ProductFormatsInstances.this.JF[P13],implicitevidence$209:ProductFormatsInstances.this.JF[P14],implicitevidence$210:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String)(implicitevidence$183:ProductFormatsInstances.this.JF[P1],implicitevidence$184:ProductFormatsInstances.this.JF[P2],implicitevidence$185:ProductFormatsInstances.this.JF[P3],implicitevidence$186:ProductFormatsInstances.this.JF[P4],implicitevidence$187:ProductFormatsInstances.this.JF[P5],implicitevidence$188:ProductFormatsInstances.this.JF[P6],implicitevidence$189:ProductFormatsInstances.this.JF[P7],implicitevidence$190:ProductFormatsInstances.this.JF[P8],implicitevidence$191:ProductFormatsInstances.this.JF[P9],implicitevidence$192:ProductFormatsInstances.this.JF[P10],implicitevidence$193:ProductFormatsInstances.this.JF[P11],implicitevidence$194:ProductFormatsInstances.this.JF[P12],implicitevidence$195:ProductFormatsInstances.this.JF[P13]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat13", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat13", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat13[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13)=>T)(implicitevidence$169:ProductFormatsInstances.this.JF[P1],implicitevidence$170:ProductFormatsInstances.this.JF[P2],implicitevidence$171:ProductFormatsInstances.this.JF[P3],implicitevidence$172:ProductFormatsInstances.this.JF[P4],implicitevidence$173:ProductFormatsInstances.this.JF[P5],implicitevidence$174:ProductFormatsInstances.this.JF[P6],implicitevidence$175:ProductFormatsInstances.this.JF[P7],implicitevidence$176:ProductFormatsInstances.this.JF[P8],implicitevidence$177:ProductFormatsInstances.this.JF[P9],implicitevidence$178:ProductFormatsInstances.this.JF[P10],implicitevidence$179:ProductFormatsInstances.this.JF[P11],implicitevidence$180:ProductFormatsInstances.this.JF[P12],implicitevidence$181:ProductFormatsInstances.this.JF[P13],implicitevidence$182:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String)(implicitevidence$157:ProductFormatsInstances.this.JF[P1],implicitevidence$158:ProductFormatsInstances.this.JF[P2],implicitevidence$159:ProductFormatsInstances.this.JF[P3],implicitevidence$160:ProductFormatsInstances.this.JF[P4],implicitevidence$161:ProductFormatsInstances.this.JF[P5],implicitevidence$162:ProductFormatsInstances.this.JF[P6],implicitevidence$163:ProductFormatsInstances.this.JF[P7],implicitevidence$164:ProductFormatsInstances.this.JF[P8],implicitevidence$165:ProductFormatsInstances.this.JF[P9],implicitevidence$166:ProductFormatsInstances.this.JF[P10],implicitevidence$167:ProductFormatsInstances.this.JF[P11],implicitevidence$168:ProductFormatsInstances.this.JF[P12]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat12", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat12", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat12[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12)=>T)(implicitevidence$144:ProductFormatsInstances.this.JF[P1],implicitevidence$145:ProductFormatsInstances.this.JF[P2],implicitevidence$146:ProductFormatsInstances.this.JF[P3],implicitevidence$147:ProductFormatsInstances.this.JF[P4],implicitevidence$148:ProductFormatsInstances.this.JF[P5],implicitevidence$149:ProductFormatsInstances.this.JF[P6],implicitevidence$150:ProductFormatsInstances.this.JF[P7],implicitevidence$151:ProductFormatsInstances.this.JF[P8],implicitevidence$152:ProductFormatsInstances.this.JF[P9],implicitevidence$153:ProductFormatsInstances.this.JF[P10],implicitevidence$154:ProductFormatsInstances.this.JF[P11],implicitevidence$155:ProductFormatsInstances.this.JF[P12],implicitevidence$156:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String)(implicitevidence$133:ProductFormatsInstances.this.JF[P1],implicitevidence$134:ProductFormatsInstances.this.JF[P2],implicitevidence$135:ProductFormatsInstances.this.JF[P3],implicitevidence$136:ProductFormatsInstances.this.JF[P4],implicitevidence$137:ProductFormatsInstances.this.JF[P5],implicitevidence$138:ProductFormatsInstances.this.JF[P6],implicitevidence$139:ProductFormatsInstances.this.JF[P7],implicitevidence$140:ProductFormatsInstances.this.JF[P8],implicitevidence$141:ProductFormatsInstances.this.JF[P9],implicitevidence$142:ProductFormatsInstances.this.JF[P10],implicitevidence$143:ProductFormatsInstances.this.JF[P11]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat11", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat11", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat11[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11)=>T)(implicitevidence$121:ProductFormatsInstances.this.JF[P1],implicitevidence$122:ProductFormatsInstances.this.JF[P2],implicitevidence$123:ProductFormatsInstances.this.JF[P3],implicitevidence$124:ProductFormatsInstances.this.JF[P4],implicitevidence$125:ProductFormatsInstances.this.JF[P5],implicitevidence$126:ProductFormatsInstances.this.JF[P6],implicitevidence$127:ProductFormatsInstances.this.JF[P7],implicitevidence$128:ProductFormatsInstances.this.JF[P8],implicitevidence$129:ProductFormatsInstances.this.JF[P9],implicitevidence$130:ProductFormatsInstances.this.JF[P10],implicitevidence$131:ProductFormatsInstances.this.JF[P11],implicitevidence$132:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String)(implicitevidence$111:ProductFormatsInstances.this.JF[P1],implicitevidence$112:ProductFormatsInstances.this.JF[P2],implicitevidence$113:ProductFormatsInstances.this.JF[P3],implicitevidence$114:ProductFormatsInstances.this.JF[P4],implicitevidence$115:ProductFormatsInstances.this.JF[P5],implicitevidence$116:ProductFormatsInstances.this.JF[P6],implicitevidence$117:ProductFormatsInstances.this.JF[P7],implicitevidence$118:ProductFormatsInstances.this.JF[P8],implicitevidence$119:ProductFormatsInstances.this.JF[P9],implicitevidence$120:ProductFormatsInstances.this.JF[P10]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat10", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat10", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat10[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10)=>T)(implicitevidence$100:ProductFormatsInstances.this.JF[P1],implicitevidence$101:ProductFormatsInstances.this.JF[P2],implicitevidence$102:ProductFormatsInstances.this.JF[P3],implicitevidence$103:ProductFormatsInstances.this.JF[P4],implicitevidence$104:ProductFormatsInstances.this.JF[P5],implicitevidence$105:ProductFormatsInstances.this.JF[P6],implicitevidence$106:ProductFormatsInstances.this.JF[P7],implicitevidence$107:ProductFormatsInstances.this.JF[P8],implicitevidence$108:ProductFormatsInstances.this.JF[P9],implicitevidence$109:ProductFormatsInstances.this.JF[P10],implicitevidence$110:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String)(implicitevidence$91:ProductFormatsInstances.this.JF[P1],implicitevidence$92:ProductFormatsInstances.this.JF[P2],implicitevidence$93:ProductFormatsInstances.this.JF[P3],implicitevidence$94:ProductFormatsInstances.this.JF[P4],implicitevidence$95:ProductFormatsInstances.this.JF[P5],implicitevidence$96:ProductFormatsInstances.this.JF[P6],implicitevidence$97:ProductFormatsInstances.this.JF[P7],implicitevidence$98:ProductFormatsInstances.this.JF[P8],implicitevidence$99:ProductFormatsInstances.this.JF[P9]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat9", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat9", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat9[P1,P2,P3,P4,P5,P6,P7,P8,P9,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9)=>T)(implicitevidence$81:ProductFormatsInstances.this.JF[P1],implicitevidence$82:ProductFormatsInstances.this.JF[P2],implicitevidence$83:ProductFormatsInstances.this.JF[P3],implicitevidence$84:ProductFormatsInstances.this.JF[P4],implicitevidence$85:ProductFormatsInstances.this.JF[P5],implicitevidence$86:ProductFormatsInstances.this.JF[P6],implicitevidence$87:ProductFormatsInstances.this.JF[P7],implicitevidence$88:ProductFormatsInstances.this.JF[P8],implicitevidence$89:ProductFormatsInstances.this.JF[P9],implicitevidence$90:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String)(implicitevidence$73:ProductFormatsInstances.this.JF[P1],implicitevidence$74:ProductFormatsInstances.this.JF[P2],implicitevidence$75:ProductFormatsInstances.this.JF[P3],implicitevidence$76:ProductFormatsInstances.this.JF[P4],implicitevidence$77:ProductFormatsInstances.this.JF[P5],implicitevidence$78:ProductFormatsInstances.this.JF[P6],implicitevidence$79:ProductFormatsInstances.this.JF[P7],implicitevidence$80:ProductFormatsInstances.this.JF[P8]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat8", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat8", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat8[P1,P2,P3,P4,P5,P6,P7,P8,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8)=>T)(implicitevidence$64:ProductFormatsInstances.this.JF[P1],implicitevidence$65:ProductFormatsInstances.this.JF[P2],implicitevidence$66:ProductFormatsInstances.this.JF[P3],implicitevidence$67:ProductFormatsInstances.this.JF[P4],implicitevidence$68:ProductFormatsInstances.this.JF[P5],implicitevidence$69:ProductFormatsInstances.this.JF[P6],implicitevidence$70:ProductFormatsInstances.this.JF[P7],implicitevidence$71:ProductFormatsInstances.this.JF[P8],implicitevidence$72:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String)(implicitevidence$57:ProductFormatsInstances.this.JF[P1],implicitevidence$58:ProductFormatsInstances.this.JF[P2],implicitevidence$59:ProductFormatsInstances.this.JF[P3],implicitevidence$60:ProductFormatsInstances.this.JF[P4],implicitevidence$61:ProductFormatsInstances.this.JF[P5],implicitevidence$62:ProductFormatsInstances.this.JF[P6],implicitevidence$63:ProductFormatsInstances.this.JF[P7]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat7", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat7", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat7[P1,P2,P3,P4,P5,P6,P7,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7)=>T)(implicitevidence$49:ProductFormatsInstances.this.JF[P1],implicitevidence$50:ProductFormatsInstances.this.JF[P2],implicitevidence$51:ProductFormatsInstances.this.JF[P3],implicitevidence$52:ProductFormatsInstances.this.JF[P4],implicitevidence$53:ProductFormatsInstances.this.JF[P5],implicitevidence$54:ProductFormatsInstances.this.JF[P6],implicitevidence$55:ProductFormatsInstances.this.JF[P7],implicitevidence$56:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat[P1,P2,P3,P4,P5,P6,T<:Product](construct:(P1,P2,P3,P4,P5,P6)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String)(implicitevidence$43:ProductFormatsInstances.this.JF[P1],implicitevidence$44:ProductFormatsInstances.this.JF[P2],implicitevidence$45:ProductFormatsInstances.this.JF[P3],implicitevidence$46:ProductFormatsInstances.this.JF[P4],implicitevidence$47:ProductFormatsInstances.this.JF[P5],implicitevidence$48:ProductFormatsInstances.this.JF[P6]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat6", "tail" : "(construct: (P1, P2, P3, P4, P5, P6) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat6", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat6[P1,P2,P3,P4,P5,P6,T<:Product](construct:(P1,P2,P3,P4,P5,P6)=>T)(implicitevidence$36:ProductFormatsInstances.this.JF[P1],implicitevidence$37:ProductFormatsInstances.this.JF[P2],implicitevidence$38:ProductFormatsInstances.this.JF[P3],implicitevidence$39:ProductFormatsInstances.this.JF[P4],implicitevidence$40:ProductFormatsInstances.this.JF[P5],implicitevidence$41:ProductFormatsInstances.this.JF[P6],implicitevidence$42:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat[P1,P2,P3,P4,P5,T<:Product](construct:(P1,P2,P3,P4,P5)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String)(implicitevidence$31:ProductFormatsInstances.this.JF[P1],implicitevidence$32:ProductFormatsInstances.this.JF[P2],implicitevidence$33:ProductFormatsInstances.this.JF[P3],implicitevidence$34:ProductFormatsInstances.this.JF[P4],implicitevidence$35:ProductFormatsInstances.this.JF[P5]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat5", "tail" : "(construct: (P1, P2, P3, P4, P5) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat5", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat5[P1,P2,P3,P4,P5,T<:Product](construct:(P1,P2,P3,P4,P5)=>T)(implicitevidence$25:ProductFormatsInstances.this.JF[P1],implicitevidence$26:ProductFormatsInstances.this.JF[P2],implicitevidence$27:ProductFormatsInstances.this.JF[P3],implicitevidence$28:ProductFormatsInstances.this.JF[P4],implicitevidence$29:ProductFormatsInstances.this.JF[P5],implicitevidence$30:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat[P1,P2,P3,P4,T<:Product](construct:(P1,P2,P3,P4)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String)(implicitevidence$21:ProductFormatsInstances.this.JF[P1],implicitevidence$22:ProductFormatsInstances.this.JF[P2],implicitevidence$23:ProductFormatsInstances.this.JF[P3],implicitevidence$24:ProductFormatsInstances.this.JF[P4]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat4", "tail" : "(construct: (P1, P2, P3, P4) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat4", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat4[P1,P2,P3,P4,T<:Product](construct:(P1,P2,P3,P4)=>T)(implicitevidence$16:ProductFormatsInstances.this.JF[P1],implicitevidence$17:ProductFormatsInstances.this.JF[P2],implicitevidence$18:ProductFormatsInstances.this.JF[P3],implicitevidence$19:ProductFormatsInstances.this.JF[P4],implicitevidence$20:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3) â‡’ T, fieldName1: String, fieldName2: String, fieldName3: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat[P1,P2,P3,T<:Product](construct:(P1,P2,P3)=>T,fieldName1:String,fieldName2:String,fieldName3:String)(implicitevidence$13:ProductFormatsInstances.this.JF[P1],implicitevidence$14:ProductFormatsInstances.this.JF[P2],implicitevidence$15:ProductFormatsInstances.this.JF[P3]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat3", "tail" : "(construct: (P1, P2, P3) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat3", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat3[P1,P2,P3,T<:Product](construct:(P1,P2,P3)=>T)(implicitevidence$9:ProductFormatsInstances.this.JF[P1],implicitevidence$10:ProductFormatsInstances.this.JF[P2],implicitevidence$11:ProductFormatsInstances.this.JF[P3],implicitevidence$12:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2) â‡’ T, fieldName1: String, fieldName2: String)(arg0: JF[P1], arg1: JF[P2]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat[P1,P2,T<:Product](construct:(P1,P2)=>T,fieldName1:String,fieldName2:String)(implicitevidence$7:ProductFormatsInstances.this.JF[P1],implicitevidence$8:ProductFormatsInstances.this.JF[P2]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat2", "tail" : "(construct: (P1, P2) â‡’ T)(arg0: JF[P1], arg1: JF[P2], arg2: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat2", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat2[P1,P2,T<:Product](construct:(P1,P2)=>T)(implicitevidence$4:ProductFormatsInstances.this.JF[P1],implicitevidence$5:ProductFormatsInstances.this.JF[P2],implicitevidence$6:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1) â‡’ T, fieldName1: String)(arg0: JF[P1]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat[P1,T<:Product](construct:P1=>T,fieldName1:String)(implicitevidence$3:ProductFormatsInstances.this.JF[P1]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat1", "tail" : "(construct: (P1) â‡’ T)(arg0: JF[P1], arg1: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat1", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#jsonFormat1[P1,T<:Product](construct:P1=>T)(implicitevidence$1:ProductFormatsInstances.this.JF[P1],implicitevidence$2:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "viaSeq", "tail" : "(f: (Seq[T]) â‡’ I)(arg0: JsonFormat[T]): RootJsonFormat[I]", "member" : "spray.json.CollectionFormats.viaSeq", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#viaSeq[I<:Iterable[T],T](f:scala.collection.immutable.Seq[T]=>I)(implicitevidence$17:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[I]", "kind" : "def"}, {"label" : "setFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Set[T]]", "member" : "spray.json.CollectionFormats.setFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#setFormat[T](implicitevidence$16:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.Set[T]]", "kind" : "implicit def"}, {"label" : "linearSeqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[LinearSeq[T]]", "member" : "spray.json.CollectionFormats.linearSeqFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#linearSeqFormat[T](implicitevidence$15:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.LinearSeq[T]]", "kind" : "implicit def"}, {"label" : "indexedSeqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[IndexedSeq[T]]", "member" : "spray.json.CollectionFormats.indexedSeqFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#indexedSeqFormat[T](implicitevidence$14:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[IndexedSeq[T]]", "kind" : "implicit def"}, {"label" : "seqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Seq[T]]", "member" : "spray.json.CollectionFormats.seqFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#seqFormat[T](implicitevidence$13:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[Seq[T]]", "kind" : "implicit def"}, {"label" : "iterableFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Iterable[T]]", "member" : "spray.json.CollectionFormats.iterableFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#iterableFormat[T](implicitevidence$12:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[Iterable[T]]", "kind" : "implicit def"}, {"label" : "vectorFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Vector[T]]", "member" : "spray.json.CollectionFormats.vectorFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#vectorFormat[T](implicitevidence$11:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[Vector[T]]", "kind" : "implicit def"}, {"label" : "immSetFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Set[T]]", "member" : "spray.json.CollectionFormats.immSetFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#immSetFormat[T](implicitevidence$10:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.immutable.Set[T]]", "kind" : "implicit def"}, {"label" : "immLinearSeqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[LinearSeq[T]]", "member" : "spray.json.CollectionFormats.immLinearSeqFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#immLinearSeqFormat[T](implicitevidence$9:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.immutable.LinearSeq[T]]", "kind" : "implicit def"}, {"label" : "immIndexedSeqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[IndexedSeq[T]]", "member" : "spray.json.CollectionFormats.immIndexedSeqFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#immIndexedSeqFormat[T](implicitevidence$8:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.immutable.IndexedSeq[T]]", "kind" : "implicit def"}, {"label" : "immSeqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Seq[T]]", "member" : "spray.json.CollectionFormats.immSeqFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#immSeqFormat[T](implicitevidence$7:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.immutable.Seq[T]]", "kind" : "implicit def"}, {"label" : "immIterableFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Iterable[T]]", "member" : "spray.json.CollectionFormats.immIterableFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#immIterableFormat[T](implicitevidence$6:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.immutable.Iterable[T]]", "kind" : "implicit def"}, {"label" : "mapFormat", "tail" : "(arg0: JsonFormat[K], arg1: JsonFormat[V]): RootJsonFormat[Map[K, V]] { def write(m: Map[K,V]): spray.json.JsObject }", "member" : "spray.json.CollectionFormats.mapFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#mapFormat[K,V](implicitevidence$4:spray.json.JsonFormat[K],implicitevidence$5:spray.json.JsonFormat[V]):spray.json.RootJsonFormat[Map[K,V]]{defwrite(m:Map[K,V]):spray.json.JsObject}", "kind" : "implicit def"}, {"label" : "arrayFormat", "tail" : "(arg0: JsonFormat[T], arg1: ClassManifest[T]): RootJsonFormat[Array[T]] { def write(array: Array[T]): spray.json.JsArray }", "member" : "spray.json.CollectionFormats.arrayFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#arrayFormat[T](implicitevidence$2:spray.json.JsonFormat[T],implicitevidence$3:ClassManifest[T]):spray.json.RootJsonFormat[Array[T]]{defwrite(array:Array[T]):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "listFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[List[T]] { def write(list: List[T]): spray.json.JsArray }", "member" : "spray.json.CollectionFormats.listFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#listFormat[T](implicitevidence$1:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[List[T]]{defwrite(list:List[T]):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple7Format", "tail" : "(arg0: JF[A], arg1: JF[B], arg2: JF[C], arg3: JF[D], arg4: JF[E], arg5: JF[F], arg6: JF[G]): RootJsonFormat[(A, B, C, D, E, F, G)] { def write(t: (A, B, C, D, E, F, G)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple7Format", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#tuple7Format[A,B,C,D,E,F,G](implicitevidence$26:StandardFormats.this.JF[A],implicitevidence$27:StandardFormats.this.JF[B],implicitevidence$28:StandardFormats.this.JF[C],implicitevidence$29:StandardFormats.this.JF[D],implicitevidence$30:StandardFormats.this.JF[E],implicitevidence$31:StandardFormats.this.JF[F],implicitevidence$32:StandardFormats.this.JF[G]):spray.json.RootJsonFormat[(A,B,C,D,E,F,G)]{defwrite(t:(A,B,C,D,E,F,G)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple6Format", "tail" : "(arg0: JF[A], arg1: JF[B], arg2: JF[C], arg3: JF[D], arg4: JF[E], arg5: JF[F]): RootJsonFormat[(A, B, C, D, E, F)] { def write(t: (A, B, C, D, E, F)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple6Format", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#tuple6Format[A,B,C,D,E,F](implicitevidence$20:StandardFormats.this.JF[A],implicitevidence$21:StandardFormats.this.JF[B],implicitevidence$22:StandardFormats.this.JF[C],implicitevidence$23:StandardFormats.this.JF[D],implicitevidence$24:StandardFormats.this.JF[E],implicitevidence$25:StandardFormats.this.JF[F]):spray.json.RootJsonFormat[(A,B,C,D,E,F)]{defwrite(t:(A,B,C,D,E,F)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple5Format", "tail" : "(arg0: JF[A], arg1: JF[B], arg2: JF[C], arg3: JF[D], arg4: JF[E]): RootJsonFormat[(A, B, C, D, E)] { def write(t: (A, B, C, D, E)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple5Format", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#tuple5Format[A,B,C,D,E](implicitevidence$15:StandardFormats.this.JF[A],implicitevidence$16:StandardFormats.this.JF[B],implicitevidence$17:StandardFormats.this.JF[C],implicitevidence$18:StandardFormats.this.JF[D],implicitevidence$19:StandardFormats.this.JF[E]):spray.json.RootJsonFormat[(A,B,C,D,E)]{defwrite(t:(A,B,C,D,E)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple4Format", "tail" : "(arg0: JF[A], arg1: JF[B], arg2: JF[C], arg3: JF[D]): RootJsonFormat[(A, B, C, D)] { def write(t: (A, B, C, D)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple4Format", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#tuple4Format[A,B,C,D](implicitevidence$11:StandardFormats.this.JF[A],implicitevidence$12:StandardFormats.this.JF[B],implicitevidence$13:StandardFormats.this.JF[C],implicitevidence$14:StandardFormats.this.JF[D]):spray.json.RootJsonFormat[(A,B,C,D)]{defwrite(t:(A,B,C,D)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple3Format", "tail" : "(arg0: JF[A], arg1: JF[B], arg2: JF[C]): RootJsonFormat[(A, B, C)] { def write(t: (A, B, C)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple3Format", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#tuple3Format[A,B,C](implicitevidence$8:StandardFormats.this.JF[A],implicitevidence$9:StandardFormats.this.JF[B],implicitevidence$10:StandardFormats.this.JF[C]):spray.json.RootJsonFormat[(A,B,C)]{defwrite(t:(A,B,C)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple2Format", "tail" : "(arg0: JF[A], arg1: JF[B]): RootJsonFormat[(A, B)] { def write(t: (A, B)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple2Format", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#tuple2Format[A,B](implicitevidence$6:StandardFormats.this.JF[A],implicitevidence$7:StandardFormats.this.JF[B]):spray.json.RootJsonFormat[(A,B)]{defwrite(t:(A,B)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple1Format", "tail" : "(arg0: JF[A]): JF[(A)]", "member" : "spray.json.StandardFormats.tuple1Format", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#tuple1Format[A](implicitevidence$5:StandardFormats.this.JF[A]):StandardFormats.this.JF[(A,)]", "kind" : "implicit def"}, {"label" : "eitherFormat", "tail" : "(arg0: JF[A], arg1: JF[B]): JF[Either[A, B]]", "member" : "spray.json.StandardFormats.eitherFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#eitherFormat[A,B](implicitevidence$3:StandardFormats.this.JF[A],implicitevidence$4:StandardFormats.this.JF[B]):StandardFormats.this.JF[Either[A,B]]", "kind" : "implicit def"}, {"label" : "optionFormat", "tail" : "(arg0: JF[T]): JF[Option[T]]", "member" : "spray.json.StandardFormats.optionFormat", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#optionFormat[T](implicitevidence$1:StandardFormats.this.JF[T]):StandardFormats.this.JF[Option[T]]", "kind" : "implicit def"}, {"label" : "sprayJsValueMarshaller", "tail" : "(printer: JsonPrinter): ToEntityMarshaller[JsValue]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsValueMarshaller", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#sprayJsValueMarshaller(implicitprinter:spray.json.JsonPrinter):akka.http.scaladsl.marshalling.ToEntityMarshaller[spray.json.JsValue]", "kind" : "implicit def"}, {"label" : "sprayJsonMarshaller", "tail" : "(writer: RootJsonWriter[T], printer: JsonPrinter): ToEntityMarshaller[T]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsonMarshaller", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#sprayJsonMarshaller[T](implicitwriter:spray.json.RootJsonWriter[T],implicitprinter:spray.json.JsonPrinter):akka.http.scaladsl.marshalling.ToEntityMarshaller[T]", "kind" : "implicit def"}, {"label" : "sprayJsonMarshallerConverter", "tail" : "(writer: RootJsonWriter[T])(printer: JsonPrinter): ToEntityMarshaller[T]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsonMarshallerConverter", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#sprayJsonMarshallerConverter[T](writer:spray.json.RootJsonWriter[T])(implicitprinter:spray.json.JsonPrinter):akka.http.scaladsl.marshalling.ToEntityMarshaller[T]", "kind" : "implicit def"}, {"label" : "sprayJsonSourceReader", "tail" : "(reader: RootJsonReader[T], support: EntityStreamingSupport): FromEntityUnmarshaller[Source[T, NotUsed]]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsonSourceReader", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#sprayJsonSourceReader[T](implicitreader:spray.json.RootJsonReader[T],implicitsupport:akka.http.scaladsl.common.EntityStreamingSupport):akka.http.scaladsl.unmarshalling.FromEntityUnmarshaller[akka.stream.scaladsl.Source[T,akka.NotUsed]]", "kind" : "implicit def"}, {"label" : "sprayJsonByteStringUnmarshaller", "tail" : "(reader: RootJsonReader[T]): FromByteStringUnmarshaller[T]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsonByteStringUnmarshaller", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#sprayJsonByteStringUnmarshaller[T](implicitreader:spray.json.RootJsonReader[T]):akka.http.scaladsl.unmarshalling.FromByteStringUnmarshaller[T]", "kind" : "implicit def"}, {"label" : "sprayJsValueByteStringUnmarshaller", "tail" : "(): FromByteStringUnmarshaller[JsValue]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsValueByteStringUnmarshaller", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#sprayJsValueByteStringUnmarshaller[T]:akka.http.scaladsl.unmarshalling.FromByteStringUnmarshaller[spray.json.JsValue]", "kind" : "implicit def"}, {"label" : "sprayJsValueUnmarshaller", "tail" : "(): FromEntityUnmarshaller[JsValue]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsValueUnmarshaller", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#sprayJsValueUnmarshaller:akka.http.scaladsl.unmarshalling.FromEntityUnmarshaller[spray.json.JsValue]", "kind" : "implicit def"}, {"label" : "sprayJsonUnmarshaller", "tail" : "(reader: RootJsonReader[T]): FromEntityUnmarshaller[T]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsonUnmarshaller", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#sprayJsonUnmarshaller[T](implicitreader:spray.json.RootJsonReader[T]):akka.http.scaladsl.unmarshalling.FromEntityUnmarshaller[T]", "kind" : "implicit def"}, {"label" : "sprayJsonUnmarshallerConverter", "tail" : "(reader: RootJsonReader[T]): FromEntityUnmarshaller[T]", "member" : "akka.http.scaladsl.marshallers.sprayjson.SprayJsonSupport.sprayJsonUnmarshallerConverter", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#sprayJsonUnmarshallerConverter[T](reader:spray.json.RootJsonReader[T]):akka.http.scaladsl.unmarshalling.FromEntityUnmarshaller[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/JsonSupport.html", "kind" : "trait"}, {"name" : "cn.chenhuanming.hello.akka.http.domain.YourName", "shortDescription" : "", "members_case class" : [{"member" : "cn.chenhuanming.hello.akka.http.domain.YourName#<init>", "error" : "unsupported entity"}, {"label" : "name", "tail" : ": String", "member" : "cn.chenhuanming.hello.akka.http.domain.YourName.name", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/YourName.html#name:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/YourName.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/YourName.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/YourName.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/YourName.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/YourName.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/YourName.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/YourName.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/YourName.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/YourName.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/YourName.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/YourName.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/YourName.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/YourName.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/YourName.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/YourName.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/YourName.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cn\/chenhuanming\/hello\/akka\/http\/domain\/YourName.html", "kind" : "case class"}]};